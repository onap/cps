{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f0be0bb4_eb874460",
        "filename": "cps-path-parser/src/main/java/org/onap/cps/cpspath/parser/CpsPathBuilder.java",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-07-09T11:35:13Z",
      "side": 1,
      "message": "Is this really a warning? At most a debug level message.\nNot sure if we really want logging at all.",
      "range": {
        "startLine": 174,
        "startChar": 19,
        "endLine": 174,
        "endChar": 26
      },
      "revId": "36bea16e3df264872d712fe3fc1ccb0d0c11ebac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3a2e7688_f6f33798",
        "filename": "cps-path-parser/src/main/java/org/onap/cps/cpspath/parser/CpsPathBuilder.java",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-07-09T11:54:46Z",
      "side": 1,
      "message": "i agree, we dont have logging anywheer else in the parses let\u0027s just remove it",
      "parentUuid": "f0be0bb4_eb874460",
      "range": {
        "startLine": 174,
        "startChar": 19,
        "endLine": 174,
        "endChar": 26
      },
      "revId": "36bea16e3df264872d712fe3fc1ccb0d0c11ebac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "642ff8f4_3560782c",
        "filename": "cps-path-parser/src/main/java/org/onap/cps/cpspath/parser/CpsPathBuilder.java",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T13:23:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3a2e7688_f6f33798",
      "range": {
        "startLine": 174,
        "startChar": 19,
        "endLine": 174,
        "endChar": 26
      },
      "revId": "36bea16e3df264872d712fe3fc1ccb0d0c11ebac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3240fea7_0870101f",
        "filename": "cps-path-parser/src/main/java/org/onap/cps/cpspath/parser/CpsPathBuilder.java",
        "patchSetId": 2
      },
      "lineNbr": 174,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T13:23:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "3a2e7688_f6f33798",
      "range": {
        "startLine": 174,
        "startChar": 19,
        "endLine": 174,
        "endChar": 26
      },
      "revId": "36bea16e3df264872d712fe3fc1ccb0d0c11ebac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "273ab5f2_bb31ed8f",
        "filename": "cps-path-parser/src/test/groovy/org/onap/cps/cpspath/parser/CpsPathBuilderSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-07-09T11:33:46Z",
      "side": 1,
      "message": "Would be better to add a test case in CpsPathQuerySpec, as it already has tests covering ancestor axis\n(note this CpsPathBuilder class is only used internally, while CpsPathQuery and CpsPathUtil are the public interfaces).",
      "revId": "36bea16e3df264872d712fe3fc1ccb0d0c11ebac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45bc4cf7_0b620047",
        "filename": "cps-path-parser/src/test/groovy/org/onap/cps/cpspath/parser/CpsPathBuilderSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-07-09T11:54:46Z",
      "side": 1,
      "message": "yes, might be better. But a separate test that verify if there is or isn\u0027t an ancestor axis. Depending on the type being the same. 3 scearios\n1) prefix a\\b  ancestor a -\u003e axis should remain\n1) prefix a\\b  ancestor b -\u003e axis should remain\n2) prefix abc\\def  ancestor ef -\u003e axis should remain (although it wont resolve anything) It proves it important to include the \u0027\\\u0027 when checking endsWith...",
      "parentUuid": "273ab5f2_bb31ed8f",
      "revId": "36bea16e3df264872d712fe3fc1ccb0d0c11ebac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5627f1c5_91c92f75",
        "filename": "cps-path-parser/src/test/groovy/org/onap/cps/cpspath/parser/CpsPathBuilderSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T13:23:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "45bc4cf7_0b620047",
      "revId": "36bea16e3df264872d712fe3fc1ccb0d0c11ebac",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}