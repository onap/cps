{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "868ff532_a640b839",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7931
      },
      "writtenOn": "2024-11-12T10:43:07Z",
      "side": 1,
      "message": "recheck",
      "revId": "2f72d9831388522c3ad230b43afcd1e1428b71ae",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8781be5e_b49073fd",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/cache/HazelcastCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-11-12T11:36:30Z",
      "side": 1,
      "message": "we cant do it here. this would mean all the maps using the common config will have a near cache and we dont want that.\nwe just need for trust level one.",
      "revId": "2f72d9831388522c3ad230b43afcd1e1428b71ae",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7070b735_0d7c3a17",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/cache/HazelcastCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 96,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-11-12T11:36:30Z",
      "side": 1,
      "message": "protected static MapConfig createNearCacheMapConfig(final String configName) {\n        final MapConfig mapConfig \u003d new MapConfig(configName);\n        mapConfig.setBackupCount(1);\n        mapConfig.setNearCacheConfig(new NearCacheConfig(configName));\n        return mapConfig;\n    }\n    \nmaybe do something like this and then call this method instead from the TrustLevelCacheConfig.",
      "revId": "2f72d9831388522c3ad230b43afcd1e1428b71ae",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2f72d9831388522c3ad230b43afcd1e1428b71ae",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and two other CI systems or another CI system and committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d3 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=3 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=3"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2f72d9831388522c3ad230b43afcd1e1428b71ae",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}