{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "d6e6e5e0_79056753",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsAdminPersistenceServiceImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-04-26T10:22:13Z",
      "side": 1,
      "message": "now that we have removed the validation which was returning an empty set if the validation failed.\ndo we want to return the empty set if the anchorEntities are null or empty to be in sync with the existing behaviour ???",
      "range": {
        "startLine": 136,
        "startChar": 39,
        "endLine": 136,
        "endChar": 54
      },
      "revId": "2b979f63a4020b65a2a85ecdb2bfa2b970eb9f76",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d911a376_5ca04a1f",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsAdminPersistenceServiceImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-04-26T10:25:02Z",
      "side": 1,
      "message": "The SQL query for getAnchorsByDataspaceIdAndModuleNames already returns an empty set if the modules don\u0027t exist.\n\nThere is an existing integration test, which is still passing after the validation is removed:\n\n        when: \u0027querying for anchors with #scenario\u0027\n            def result \u003d objectUnderTest.queryAnchorNames(GENERAL_TEST_DATASPACE, [\u0027unknownModule\u0027])\n        then: \u0027an empty result is returned (no error)\u0027\n            assert result \u003d\u003d []",
      "parentUuid": "d6e6e5e0_79056753",
      "range": {
        "startLine": 136,
        "startChar": 39,
        "endLine": 136,
        "endChar": 54
      },
      "revId": "2b979f63a4020b65a2a85ecdb2bfa2b970eb9f76",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb3c543d_2bbabf2d",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsAdminPersistenceServiceImpl.java",
        "patchSetId": 2
      },
      "lineNbr": 136,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-04-26T10:26:27Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d911a376_5ca04a1f",
      "range": {
        "startLine": 136,
        "startChar": 39,
        "endLine": 136,
        "endChar": 54
      },
      "revId": "2b979f63a4020b65a2a85ecdb2bfa2b970eb9f76",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cf2c08e6_d1dc0854",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/performance/cps/ModuleQueryPerfTest.groovy",
        "patchSetId": 2
      },
      "lineNbr": 79,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-04-26T10:19:39Z",
      "side": 1,
      "message": "not",
      "range": {
        "startLine": 79,
        "startChar": 44,
        "endLine": 79,
        "endChar": 47
      },
      "revId": "2b979f63a4020b65a2a85ecdb2bfa2b970eb9f76",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2b979f63a4020b65a2a85ecdb2bfa2b970eb9f76",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "2b979f63a4020b65a2a85ecdb2bfa2b970eb9f76",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}