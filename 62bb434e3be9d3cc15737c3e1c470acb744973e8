{
  "comments": [
    {
      "key": {
        "uuid": "04f3e693_7938393d",
        "filename": "cps-ncmp-rest/src/main/java/org/onap/cps/ncmp/rest/controller/NcmpRestInputMapper.java",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 7744
      },
      "writtenOn": "2022-03-10T14:58:37Z",
      "side": 1,
      "message": "I don\u0027t think this is necessary? Wherever the mapped values are the same, it doesn\u0027t need to be defined within a mapping tag.\n\nAnd I think the null checks could still be defined globally at the top of the class as done previously.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 45,
        "endChar": 91
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff8be2e9_658aa1d0",
        "filename": "cps-ncmp-rest/src/main/java/org/onap/cps/ncmp/rest/controller/NcmpRestInputMapper.java",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-03-10T16:46:41Z",
      "side": 1,
      "message": "this was brought up Bruno; we dont want this to be the defautl behavior for any object that is converted by this mapper. So instead it should be defined per class/property. A bit verbose but more flexible!",
      "parentUuid": "04f3e693_7938393d",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 45,
        "endChar": 91
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ca4cf94_a3f2b519",
        "filename": "cps-ncmp-rest/src/main/java/org/onap/cps/ncmp/rest/controller/NcmpRestInputMapper.java",
        "patchSetId": 5
      },
      "lineNbr": 45,
      "author": {
        "id": 5658
      },
      "writtenOn": "2022-03-11T03:42:47Z",
      "side": 1,
      "message": "I would like to come back to this during the daily.",
      "parentUuid": "ff8be2e9_658aa1d0",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 45,
        "endChar": 91
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b052371_8f449a51",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/CpsRestInputMapperSpec.groovy",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-03-09T18:01:11Z",
      "side": 1,
      "message": "would we prefer a empty collection here, normally we do but maybe this is a non-existing edge-case... a valdi schemeaset has to have at least 1 module...",
      "range": {
        "startLine": 57,
        "startChar": 55,
        "endLine": 57,
        "endChar": 62
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54b11d3d_17306430",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/CpsRestInputMapperSpec.groovy",
        "patchSetId": 5
      },
      "lineNbr": 57,
      "author": {
        "id": 7830
      },
      "writtenOn": "2022-03-10T16:26:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4b052371_8f449a51",
      "range": {
        "startLine": 57,
        "startChar": 55,
        "endLine": 57,
        "endChar": 62
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f15a87d7_af44d1f7",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/exceptions/CpsRestExceptionHandlerSpec.groovy",
        "patchSetId": 5
      },
      "lineNbr": 79,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-03-09T18:01:11Z",
      "side": 1,
      "message": "when we debugged the test did we not conclude that \na) the objectMappper is NOT used so can be a stub (as null is not allowed)\nb) the RestInputMapper IS used ie. should have real instance here?!",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 79,
        "endChar": 50
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25cf3700_f37e2716",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/exceptions/CpsRestExceptionHandlerSpec.groovy",
        "patchSetId": 5
      },
      "lineNbr": 79,
      "author": {
        "id": 7830
      },
      "writtenOn": "2022-03-10T09:11:55Z",
      "side": 1,
      "message": "No that was the NcmpRestExceptionHandlerSpec, I debugged this one myself and it was the other way around",
      "parentUuid": "f15a87d7_af44d1f7",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 79,
        "endChar": 50
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47b96c72_40dd7c39",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/exceptions/CpsRestExceptionHandlerSpec.groovy",
        "patchSetId": 5
      },
      "lineNbr": 79,
      "author": {
        "id": 7830
      },
      "writtenOn": "2022-03-10T16:26:12Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "25cf3700_f37e2716",
      "range": {
        "startLine": 75,
        "startChar": 1,
        "endLine": 79,
        "endChar": 50
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b59faa30_bad0bb8d",
        "filename": "jacoco-report/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-03-09T18:01:11Z",
      "side": 1,
      "message": "maybe add xml comment saying all below excluding are referring to generated code!",
      "range": {
        "startLine": 63,
        "startChar": 16,
        "endLine": 64,
        "endChar": 30
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "315e9115_b5aa1f3c",
        "filename": "jacoco-report/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 7744
      },
      "writtenOn": "2022-03-10T14:58:37Z",
      "side": 1,
      "message": "If we are excluding this. Are the tests still necessary for the new mapping interfaces?\n\nI would imagine we want to keep them functionality wise, as opposed to just meeting coverage checks?",
      "parentUuid": "b59faa30_bad0bb8d",
      "range": {
        "startLine": 63,
        "startChar": 16,
        "endLine": 64,
        "endChar": 30
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e07cded_2e804363",
        "filename": "jacoco-report/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 7830
      },
      "writtenOn": "2022-03-10T16:26:12Z",
      "side": 1,
      "message": "Discussed with Toine, we don\u0027t want code coverage from autogenerated classes to take away from the code coverage of our written classes. Still want to keep tests for functionality yes",
      "parentUuid": "315e9115_b5aa1f3c",
      "range": {
        "startLine": 63,
        "startChar": 16,
        "endLine": 64,
        "endChar": 30
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "069bf4c3_33bfa523",
        "filename": "jacoco-report/pom.xml",
        "patchSetId": 5
      },
      "lineNbr": 64,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-03-10T16:46:41Z",
      "side": 1,
      "message": "or add to the average coverage percentage :-)",
      "parentUuid": "2e07cded_2e804363",
      "range": {
        "startLine": 63,
        "startChar": 16,
        "endLine": 64,
        "endChar": 30
      },
      "revId": "62bb434e3be9d3cc15737c3e1c470acb744973e8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}