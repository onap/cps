{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "efd6044a_23431f4c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-12-05T18:36:07Z",
      "side": 1,
      "message": "can you ask Sourabh WHY we are doing this ie. what is the advantage\nThen mention the why in the Jira and in this commit message too",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 63
      },
      "revId": "9d2069ffd69a570d59b4db6024641fd555511e74",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74f91067_410b9dcc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-12-11T18:19:37Z",
      "side": 1,
      "message": "Need to get Sourabh\u0027s opinion if we still want/need to do this change",
      "revId": "9d2069ffd69a570d59b4db6024641fd555511e74",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c43306d_cc76c0d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7957
      },
      "writtenOn": "2023-12-12T10:13:58Z",
      "side": 1,
      "message": "@Jeff : We should abandon this commit as IQueue extends BlockingQueue into  hazelcast collection and in our current code while preparing batch of cm handles we are using 2 methods from BlockingQueue 1. Offer 2. drainTo where as IQueue doesn\u0027t have these operations. Hope it\u0027s clear why we need BlockingQueue.\n\npackage com.hazelcast.collection;\npublic interface IQueue\u003cE\u003e extends BlockingQueue\u003cE\u003e",
      "revId": "9d2069ffd69a570d59b4db6024641fd555511e74",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "9d2069ffd69a570d59b4db6024641fd555511e74",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "9d2069ffd69a570d59b4db6024641fd555511e74",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}