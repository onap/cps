{
  "comments": [
    {
      "key": {
        "uuid": "13c90665_b76660f2",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/entities/YangResourceModuleReference.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 5006
      },
      "writtenOn": "2021-08-06T09:47:28Z",
      "side": 1,
      "message": "now its gone from revision but you kept it here. Any reason.",
      "range": {
        "startLine": 27,
        "startChar": 4,
        "endLine": 27,
        "endChar": 8
      },
      "revId": "dce1d58005d90950e00b22078d82559748dcb255",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef4c3212_759123ad",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/entities/YangResourceModuleReference.java",
        "patchSetId": 6
      },
      "lineNbr": 27,
      "author": {
        "id": 7486
      },
      "writtenOn": "2021-08-06T10:02:57Z",
      "side": 1,
      "message": "Without this here, module_name is not being mapped to getModuleName, this is the reason I kept it here. I am using examples from here to model this part of the code https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#projections . What I am doing here is called Open Projection, this allows us to match interface methods with unmatched names with return values computed at runtime. \n\nWith that being said if I were to remove this line and rename the method to getModule_Name then the mapping would be done automatically. But this breaks our naming conventions and thus I opted to use this way.",
      "parentUuid": "13c90665_b76660f2",
      "range": {
        "startLine": 27,
        "startChar": 4,
        "endLine": 27,
        "endChar": 8
      },
      "revId": "dce1d58005d90950e00b22078d82559748dcb255",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24b0f2c8_3358ebb0",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 5006
      },
      "writtenOn": "2021-08-06T09:47:28Z",
      "side": 1,
      "message": "minor: log this exception",
      "range": {
        "startLine": 236,
        "startChar": 11,
        "endLine": 236,
        "endChar": 12
      },
      "revId": "dce1d58005d90950e00b22078d82559748dcb255",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20c2d3b2_9f4c94bf",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 7486
      },
      "writtenOn": "2021-08-06T10:02:57Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "24b0f2c8_3358ebb0",
      "range": {
        "startLine": 236,
        "startChar": 11,
        "endLine": 236,
        "endChar": 12
      },
      "revId": "dce1d58005d90950e00b22078d82559748dcb255",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "911c37f9_6b044fb8",
        "filename": "cps-ri/src/test/groovy/org/onap/cps/spi/impl/CpsModulePersistenceServiceIntegrationSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 7744
      },
      "writtenOn": "2021-08-06T15:19:03Z",
      "side": 1,
      "message": "Why are we using static finals instead of def here, but in the next test class using def instead of static final. Should this be kept consistent across all test classes.",
      "revId": "dce1d58005d90950e00b22078d82559748dcb255",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7d16442_7f0b9d95",
        "filename": "cps-ri/src/test/groovy/org/onap/cps/spi/impl/CpsModulePersistenceServiceIntegrationSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 60,
      "author": {
        "id": 7486
      },
      "writtenOn": "2021-08-06T15:38:16Z",
      "side": 1,
      "message": "Yes I think it should be kept consistent and I have checked other test classes across this project and I have created a refactoring task to handle these. https://jira.onap.org/browse/CPS-557",
      "parentUuid": "911c37f9_6b044fb8",
      "revId": "dce1d58005d90950e00b22078d82559748dcb255",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b0ace6af_fee306c3",
        "filename": "cps-ri/src/test/groovy/org/onap/cps/spi/impl/CpsModulePersistenceServiceIntegrationSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 7744
      },
      "writtenOn": "2021-08-06T15:19:03Z",
      "side": 1,
      "message": "Not a blocking issue. But for future reference would it be better to leverage the TestUtils class to read in jsonFiles, as opposed to using long strings which take up multiple lines of code.",
      "revId": "dce1d58005d90950e00b22078d82559748dcb255",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d41da36_f5987cae",
        "filename": "cps-ri/src/test/groovy/org/onap/cps/spi/impl/CpsModulePersistenceServiceIntegrationSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 61,
      "author": {
        "id": 7486
      },
      "writtenOn": "2021-08-06T15:38:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b0ace6af_fee306c3",
      "revId": "dce1d58005d90950e00b22078d82559748dcb255",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26c10a46_15e98de0",
        "filename": "cps-ri/src/test/groovy/org/onap/cps/spi/impl/CpsModulePersistenceServiceSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 7744
      },
      "writtenOn": "2021-08-06T15:19:03Z",
      "side": 1,
      "message": "Same comment applies here as left on previous file",
      "revId": "dce1d58005d90950e00b22078d82559748dcb255",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34e21b79_f94aaf78",
        "filename": "cps-ri/src/test/groovy/org/onap/cps/spi/impl/CpsModulePersistenceServiceSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 48,
      "author": {
        "id": 7486
      },
      "writtenOn": "2021-08-06T15:38:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "26c10a46_15e98de0",
      "revId": "dce1d58005d90950e00b22078d82559748dcb255",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}