{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7f9b109e_1152b578",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 7931
      },
      "writtenOn": "2023-07-20T12:14:32Z",
      "side": 1,
      "message": "recheck",
      "revId": "d09801ba4f819b1891ee25c09cca5e2c0e40dcd2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8588c39e_ac990b86",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 27
      },
      "lineNbr": 325,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-07-20T14:13:57Z",
      "side": 1,
      "message": "use \u003d\u003d and swap if else blocks",
      "range": {
        "startLine": 325,
        "startChar": 29,
        "endLine": 325,
        "endChar": 32
      },
      "revId": "d09801ba4f819b1891ee25c09cca5e2c0e40dcd2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b88eb9ac_0ca352e4",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/utils/CpsValidatorImpl.java",
        "patchSetId": 27
      },
      "lineNbr": 61,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-07-20T14:13:57Z",
      "side": 1,
      "message": "swap (always use constant first).also, could you use .equals() instead ?",
      "range": {
        "startLine": 61,
        "startChar": 40,
        "endLine": 61,
        "endChar": 90
      },
      "revId": "d09801ba4f819b1891ee25c09cca5e2c0e40dcd2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "929cc781_d6543c55",
        "filename": "cps-ri/src/test/groovy/org/onap/cps/spi/impl/utils/CpsValidatorSpec.groovy",
        "patchSetId": 27
      },
      "lineNbr": 68,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-07-20T14:13:57Z",
      "side": 1,
      "message": "no need to repeat these 3 words as is already in each scenario really...\nthis will do: \u0027Validate Pagination option with #scenario\u0027",
      "range": {
        "startLine": 68,
        "startChar": 41,
        "endLine": 68,
        "endChar": 61
      },
      "revId": "d09801ba4f819b1891ee25c09cca5e2c0e40dcd2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1986ff9_7dd0e429",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/PaginationOption.java",
        "patchSetId": 27
      },
      "lineNbr": 0,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-07-20T14:13:57Z",
      "side": 1,
      "message": "IF think all this logic around page size checks and validation is overcomplicated\n\nI would\n1) Define null as NO_PAGINATION\n2) use primitive int for both fields\n2) Hardcode controller to only create the option if both paremeters are NOT null\n(NO need for exception if both options are not set, you can add notes in teh OpenAPI desrption for these options)\n3) DO any validation in service layer (for negative numbers)",
      "revId": "d09801ba4f819b1891ee25c09cca5e2c0e40dcd2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "794378d7_926c0955",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/PaginationOption.java",
        "patchSetId": 27
      },
      "lineNbr": 29,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-07-20T14:13:57Z",
      "side": 1,
      "message": "why not use primitive int ?\nI think the only reason is the REST interface but conversion of Integer to int (and nullchecks) shoudl be handled in the controller",
      "range": {
        "startLine": 29,
        "startChar": 12,
        "endLine": 29,
        "endChar": 20
      },
      "revId": "d09801ba4f819b1891ee25c09cca5e2c0e40dcd2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9afaf30_39bd91b0",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/PaginationOption.java",
        "patchSetId": 27
      },
      "lineNbr": 31,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-07-20T14:13:57Z",
      "side": 1,
      "message": "as above",
      "range": {
        "startLine": 31,
        "startChar": 12,
        "endLine": 31,
        "endChar": 20
      },
      "revId": "d09801ba4f819b1891ee25c09cca5e2c0e40dcd2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4931b1cc_07ed766b",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/PaginationOption.java",
        "patchSetId": 27
      },
      "lineNbr": 33,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-07-20T14:13:57Z",
      "side": 1,
      "message": "why not use null for NO Pagination ?!",
      "range": {
        "startLine": 33,
        "startChar": 56,
        "endLine": 33,
        "endChar": 86
      },
      "revId": "d09801ba4f819b1891ee25c09cca5e2c0e40dcd2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e46f8f29_2f27569a",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/DataMapUtilsSpec.groovy",
        "patchSetId": 27
      },
      "lineNbr": 89,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-07-20T14:30:16Z",
      "side": 1,
      "message": "I had to refactor the test to get it passing with maven and pipeline. Not sure why it works in Intelli-j but not maven:\n\n    def \u0027Data node structure with anchor name conversion to map with root node identifier.\u0027() {\n        when: \u0027data node structure is converted to a map with root node identifier\u0027\n            def result \u003d DataMapUtils.toDataMapWithIdentifierAndAnchor([dataNodeWithAnchor], dataNodeWithAnchor.anchorName, dataNodeWithAnchor.moduleNamePrefix)\n        then: \u0027root node leaves are populated under its node identifier\u0027\n            def dataNodes \u003d result.dataNodes as List\n            assert dataNodes.size() \u003d\u003d 1\n            def parentNode \u003d dataNodes[0].parent\n            assert parentNode.parentLeaf \u003d\u003d \u0027parentLeafValue\u0027\n            assert parentNode.parentLeafList \u003d\u003d [\u0027parentLeafListEntry1\u0027,\u0027parentLeafListEntry2\u0027]\n        and: \u0027leaves for child element is populated under its node identifier\u0027\n            assert parentNode.\u0027child-object\u0027.childLeaf \u003d\u003d \u0027childLeafValue\u0027\n        and: \u0027leaves for grandchild element is populated under its node identifier\u0027\n            assert parentNode.\u0027child-object\u0027.\u0027grand-child-object\u0027.grandChildLeaf \u003d\u003d \u0027grandChildLeafValue\u0027\n        and: \u0027data node is associated with anchor name\u0027\n            assert result.anchorName \u003d\u003d \u0027anchor01\u0027\n    }",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 89,
        "endChar": 5
      },
      "revId": "d09801ba4f819b1891ee25c09cca5e2c0e40dcd2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "929fa159_03daca64",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/functional/CpsQueryServiceIntegrationSpec.groovy",
        "patchSetId": 27
      },
      "lineNbr": 278,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-07-20T14:13:57Z",
      "side": 1,
      "message": "NB: Use static import so you don\u0027t have to preceed \u0027PagainationOption.\u0027",
      "range": {
        "startLine": 278,
        "startChar": 136,
        "endLine": 278,
        "endChar": 153
      },
      "revId": "d09801ba4f819b1891ee25c09cca5e2c0e40dcd2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}