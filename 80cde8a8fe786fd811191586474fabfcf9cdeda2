{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f6826915_871637de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-08-26T15:37:44Z",
      "side": 1,
      "message": "fine by me.\ndiscussed on the comment that I made previously on the default trust level.\nIt will eventually be corrected by the watchdog.",
      "revId": "80cde8a8fe786fd811191586474fabfcf9cdeda2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6debdc7d_e4d5e91b",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/CmHandleRegistrationService.java",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-08-26T10:30:00Z",
      "side": 1,
      "message": "probably legacy issue , but we are registering the dmi service as the first step.\nwhat if the other steps fail after this and maybe we are unable to remove, create, update or upgrade ( in short contact the DMI plugin ) . We dont want the trust level to be complete in that scenario. right ??\n\nso do we register the DMI as the last step by checking if we are able to contact the DMI and DMI is able to perform the operations.",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 67
      },
      "revId": "80cde8a8fe786fd811191586474fabfcf9cdeda2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5ebcf0a_623f9ac5",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/CmHandleRegistrationService.java",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-08-26T11:30:49Z",
      "side": 1,
      "message": "As this review being discussed in a call, decided to keep the patch-set as-is.\n\nSince, there is another bean scheduled to check if the dmi is accessible or not (DmiPluginWatchDog).\n\nFor the point of adding dmi-plugin to the cache regardless of waiting crate, update, upgrade, and remove is seems also ok. Since there is a re-try mechanism for the operations. It is very less probability to get fail over all the CRUD operations for entire cm handles. Nevertheless, the trust level of a cm handle is being decided by effective trust level that looking for both caches.",
      "parentUuid": "6debdc7d_e4d5e91b",
      "range": {
        "startLine": 96,
        "startChar": 8,
        "endLine": 96,
        "endChar": 67
      },
      "revId": "80cde8a8fe786fd811191586474fabfcf9cdeda2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "80cde8a8fe786fd811191586474fabfcf9cdeda2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "80cde8a8fe786fd811191586474fabfcf9cdeda2",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}