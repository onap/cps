{
  "comments": [
    {
      "key": {
        "uuid": "09a063ef_3e1630f0",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 486,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-04-19T16:33:18Z",
      "side": 1,
      "message": "I doubt this is still needed,  if it is it should call the NEW method with an colletion/Array of 1 xpath",
      "range": {
        "startLine": 486,
        "startChar": 16,
        "endLine": 486,
        "endChar": 32
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "acbc2cc2_8743aa06",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 486,
      "author": {
        "id": 7846
      },
      "writtenOn": "2023-04-25T12:40:14Z",
      "side": 1,
      "message": "it is still being used by CpsDataService.processDataNodeUpdate. But I will check if it can be replaced with new method. In the mean time calling new method with Map of one xpath and DataNode",
      "parentUuid": "09a063ef_3e1630f0",
      "range": {
        "startLine": 486,
        "startChar": 16,
        "endLine": 486,
        "endChar": 32
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c771e5d6_a73c3c9d",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 498,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-04-19T16:33:18Z",
      "side": 1,
      "message": "should be xpaths, for consistency if existing method and this wil also help you to rector the 2 methods into 1",
      "range": {
        "startLine": 498,
        "startChar": 68,
        "endLine": 498,
        "endChar": 77
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb7b5c25_203c7f6d",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 498,
      "author": {
        "id": 7846
      },
      "writtenOn": "2023-04-25T12:40:14Z",
      "side": 1,
      "message": "Cannot extract the xPaths from the Map in the service layer because the Map is then used here for retrieving the associated fragment entities.\n\nAlso it is a Map of xPaths to DataNodes whereas the previous method uses  xPath and Leaf. This is because there will always be one xpath and one data node.\n\nThe new method needs a Map of xpath and data node so that it can retrieve the fragment entities with same xpath as the data node being updated.",
      "parentUuid": "c771e5d6_a73c3c9d",
      "range": {
        "startLine": 498,
        "startChar": 68,
        "endLine": 498,
        "endChar": 77
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e79179bd_bb4fdef1",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsDataServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 165,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-04-19T16:33:18Z",
      "side": 1,
      "message": "should extract xPaths here",
      "range": {
        "startLine": 165,
        "startChar": 86,
        "endLine": 165,
        "endChar": 102
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ed79af8_34df9492",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsDataServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 165,
      "author": {
        "id": 7846
      },
      "writtenOn": "2023-04-25T12:40:14Z",
      "side": 1,
      "message": "Reason: https://gerrit.onap.org/r/c/cps/+/134019/9/cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java#498",
      "parentUuid": "e79179bd_bb4fdef1",
      "range": {
        "startLine": 165,
        "startChar": 86,
        "endLine": 165,
        "endChar": 102
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "851039e1_4f848c90",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/CpsDataPersistenceService.java",
        "patchSetId": 9
      },
      "lineNbr": 147,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-04-19T16:33:18Z",
      "side": 1,
      "message": "this name suggest it is about multiple leaves, which is not correct\nsuggestion: batchUpdateDataLeaves",
      "range": {
        "startLine": 147,
        "startChar": 15,
        "endLine": 147,
        "endChar": 32
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cae7e7b_f0f8e9f1",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/CpsDataPersistenceService.java",
        "patchSetId": 9
      },
      "lineNbr": 147,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-04-19T16:33:18Z",
      "side": 1,
      "message": "to be consistent with the previous method you should use a collection of xpaths here (and tehn you can even remove the previous method!)",
      "range": {
        "startLine": 147,
        "startChar": 75,
        "endLine": 147,
        "endChar": 105
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd3194a7_9bcd1a67",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/CpsDataPersistenceService.java",
        "patchSetId": 9
      },
      "lineNbr": 147,
      "author": {
        "id": 7846
      },
      "writtenOn": "2023-04-25T12:40:14Z",
      "side": 1,
      "message": "Reason: https://gerrit.onap.org/r/c/cps/+/134019/9/cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java#498",
      "parentUuid": "8cae7e7b_f0f8e9f1",
      "range": {
        "startLine": 147,
        "startChar": 75,
        "endLine": 147,
        "endChar": 105
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67429438_656f1a22",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/CpsDataPersistenceService.java",
        "patchSetId": 9
      },
      "lineNbr": 147,
      "author": {
        "id": 7846
      },
      "writtenOn": "2023-04-25T12:40:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "851039e1_4f848c90",
      "range": {
        "startLine": 147,
        "startChar": 15,
        "endLine": 147,
        "endChar": 32
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "334ac8d5_0a20587d",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-04-19T16:33:18Z",
      "side": 1,
      "message": "I did not revie testware since product code need signifcant changes",
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9e6f9daa_e4c4de68",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 7846
      },
      "writtenOn": "2023-04-25T12:40:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "334ac8d5_0a20587d",
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd906267_9d598b27",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/FunctionalSpecBase.groovy",
        "patchSetId": 9
      },
      "lineNbr": 27,
      "author": {
        "id": 7846
      },
      "writtenOn": "2023-04-17T11:15:10Z",
      "side": 1,
      "message": "This creates 2 anchors per dataspace so we are creating a total of 4 anchors(2 for FUNCTIONAL_TEST_DATASPACE_1 and 2 for FUNCTIONAL_TEST_DATASPACE_2) but then we are only using bookstoreAnchor1(of FUNCTIONAL_TEST_DATASPACE_1) and bookstoreAnchor2(of FUNCTIONAL_TEST_DATASPACE_2) leaving bookstoreAnchor2(of FUNCTIONAL_TEST_DATASPACE_1) and bookstoreAnchor1(of FUNCTIONAL_TEST_DATASPACE_2) unused.\n\nNow for this code commit I am using bookstoreAnchor2(of FUNCTIONAL_TEST_DATASPACE_1).\n\nSo it is better to hardcode the number of anchors needed at line 52 and 53 respectively and avoid creating unnecessary anchors.",
      "range": {
        "startLine": 27,
        "startChar": 4,
        "endLine": 27,
        "endChar": 70
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa043bb2_04ef5949",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/FunctionalSpecBase.groovy",
        "patchSetId": 9
      },
      "lineNbr": 27,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-04-19T12:52:07Z",
      "side": 1,
      "message": "Some info: the additional anchors in dataspace 2 were added for tests of queryDataNodesAcrossAnchors. They are indirectly used to test that only anchors in dataspace 1 are returned, but *not* anchors in dataspace 2. This is needed to detect a bug where it queries across dataspaces (CPS-1580).",
      "parentUuid": "bd906267_9d598b27",
      "range": {
        "startLine": 27,
        "startChar": 4,
        "endLine": 27,
        "endChar": 70
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0cd24d3_bd8730c6",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/FunctionalSpecBase.groovy",
        "patchSetId": 9
      },
      "lineNbr": 27,
      "author": {
        "id": 7846
      },
      "writtenOn": "2023-04-25T12:40:14Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "aa043bb2_04ef5949",
      "range": {
        "startLine": 27,
        "startChar": 4,
        "endLine": 27,
        "endChar": 70
      },
      "revId": "3b46bcfc8b0f0f535d55461115c89fb54513e0dd",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}