{
  "comments": [
    {
      "key": {
        "uuid": "fabea984_00260a2b",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 7680
      },
      "writtenOn": "2022-01-06T16:37:22Z",
      "side": 1,
      "message": "There is a change in the parameter being sent to the Service layer. Initially it was same as jsonString but now it is different. \nDoes it not cause any issues as service layer input has changed ?",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 67,
        "endChar": 139
      },
      "revId": "6833fe1febcc0dc1e2eabf2438235a9ff28d2625",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4129bce4_0a45591f",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-01-06T17:14:42Z",
      "side": 1,
      "message": "actually I think you might have a point (but I don\u0027t understand why our intergration test are still passing if this really would be different)\n\nLooking closely and removing any java wrapping characters\n\nthe old string starts with: {\"some-key\"\nthe new string starts with: \"{\"some-key\"\n\nso there is Addiotnal wrapping!\nbut why do the CSIT test still pass?! am I missing something?!",
      "parentUuid": "fabea984_00260a2b",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 67,
        "endChar": 139
      },
      "revId": "6833fe1febcc0dc1e2eabf2438235a9ff28d2625",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4b147f35_e67f90a5",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 7957
      },
      "writtenOn": "2022-01-07T10:41:00Z",
      "side": 1,
      "message": "Yes I also agree with Renu it\u0027s valid point. I investigated further and found there was problem with jsonObject \u003d groovy.json.JsonOutput.toJson(jsonString); that produces output with \"{\"some-key\". I modified unit test to except  jsonString into content body of request using .content(jsonString) and removed groovy.json.JsonOutput.toJson(jsonString) as it\u0027s not required any more.",
      "parentUuid": "fabea984_00260a2b",
      "range": {
        "startLine": 64,
        "startChar": 4,
        "endLine": 67,
        "endChar": 139
      },
      "revId": "6833fe1febcc0dc1e2eabf2438235a9ff28d2625",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9c942b6_f608355d",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangUtilsSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-01-06T14:48:33Z",
      "side": 1,
      "message": "org.onap.cps prefix not needed",
      "range": {
        "startLine": 108,
        "startChar": 27,
        "endLine": 108,
        "endChar": 40
      },
      "revId": "6833fe1febcc0dc1e2eabf2438235a9ff28d2625",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e97220a_c67c2207",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangUtilsSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-01-06T14:48:33Z",
      "side": 1,
      "message": "rename to \u0027jsonDataWithSpacesInArrayElement\u0027 for clarity\nand move this into the the \u0027when\u0027 block ie. just before line 122\n\nactually there are 2 alterantives whatever you prefer:\n\nA)\ngiven: \u0027schema context\u0027\n\n            def yangResourcesMap \u003d TestUtils.getYangResourcesAsMap(\u0027bookstore.yang\u0027)\n            def schemaContext \u003d YangTextSchemaSourceSetBuilder.of(yangResourcesMap).getSchemaContext()\n        when: \u0027json array element having space is parsed\u0027\n            def jsonDataWithSpacesInArrayElement \u003d org.onap.cps.TestUtils.getResourceFileContent(\u0027bookstore.json\u0027)\n            def result \u003d YangUtils.parseJsonData(jsonDataWithSpacesInArrayElement, schemaContext)\nB)\ngiven: \u0027schema context\u0027\n\n            def yangResourcesMap \u003d TestUtils.getYangResourcesAsMap(\u0027bookstore.yang\u0027)\n            def schemaContext \u003d YangTextSchemaSourceSetBuilder.of(yangResourcesMap).getSchemaContext()\n        and : \u0027some json data with space in teh array elements\u0027\n            def jsonDataWithSpacesInArrayElement \u003d TestUtils.getResourceFileContent(\u0027bookstore.json\u0027)\n        when: \u0027that json data is parsed\u0027\n            def result \u003d YangUtils.parseJsonData(jsonDataWithSpacesInArrayElement, schemaContext)\nB is probably better",
      "range": {
        "startLine": 108,
        "startChar": 16,
        "endLine": 108,
        "endChar": 25
      },
      "revId": "6833fe1febcc0dc1e2eabf2438235a9ff28d2625",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4927d803_467294af",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangUtilsSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 7957
      },
      "writtenOn": "2022-01-07T10:41:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d9c942b6_f608355d",
      "range": {
        "startLine": 108,
        "startChar": 27,
        "endLine": 108,
        "endChar": 40
      },
      "revId": "6833fe1febcc0dc1e2eabf2438235a9ff28d2625",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b4a9234_d4a92b08",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangUtilsSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 7957
      },
      "writtenOn": "2022-01-07T10:41:00Z",
      "side": 1,
      "message": "Applied code change as suggested into \"B\"",
      "parentUuid": "6e97220a_c67c2207",
      "range": {
        "startLine": 108,
        "startChar": 16,
        "endLine": 108,
        "endChar": 25
      },
      "revId": "6833fe1febcc0dc1e2eabf2438235a9ff28d2625",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5f8fde67_451406cb",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangUtilsSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-01-06T14:48:33Z",
      "side": 1,
      "message": "since we are not realy interested in teh result here (we are not looking at the data with teh space anyway) for the scope of this test and the original bug it is good enough to do this:\n\n        when: \u0027that json data is parsed\u0027\n            YangUtils.parseJsonData(jsonDataWithSpacesInArrayElement, schemaContext)\n        then: \u0027no exception thrown\u0027\n            noExceptionThrown()",
      "range": {
        "startLine": 112,
        "startChar": 1,
        "endLine": 114,
        "endChar": 95
      },
      "revId": "6833fe1febcc0dc1e2eabf2438235a9ff28d2625",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "11e1918d_9b853c57",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangUtilsSpec.groovy",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 7957
      },
      "writtenOn": "2022-01-07T10:41:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5f8fde67_451406cb",
      "range": {
        "startLine": 112,
        "startChar": 1,
        "endLine": 114,
        "endChar": 95
      },
      "revId": "6833fe1febcc0dc1e2eabf2438235a9ff28d2625",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}