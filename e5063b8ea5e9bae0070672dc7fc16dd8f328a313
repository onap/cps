{
  "comments": [
    {
      "key": {
        "uuid": "4a3023ed_40034172",
        "filename": "cps-path-parser/src/main/antlr4/org/onap/cps/cpspath/parser/antlr4/CpsPath.g4",
        "patchSetId": 19
      },
      "lineNbr": 56,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-04T14:37:10Z",
      "side": 1,
      "message": "why dont you add EQ to this too ?!",
      "range": {
        "startLine": 56,
        "startChar": 24,
        "endLine": 56,
        "endChar": 76
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3d0969b_4217d563",
        "filename": "cps-path-parser/src/main/antlr4/org/onap/cps/cpspath/parser/antlr4/CpsPath.g4",
        "patchSetId": 19
      },
      "lineNbr": 56,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-05-05T13:41:48Z",
      "side": 1,
      "message": "Agreed. Something like this should work:\n  leafCondition : AT leafName EQ StringLiteral | AT leafName comparativeOperators  IntegerLiteral ;\n\n  comparativeOperators : ( LT | LE | EQ | GE | GT ) ;\n\nAnd I think this may fix issues with AND/OR with comparisons.",
      "parentUuid": "4a3023ed_40034172",
      "range": {
        "startLine": 56,
        "startChar": 24,
        "endLine": 56,
        "endChar": 76
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e1e65867_fd48980a",
        "filename": "cps-path-parser/src/main/antlr4/org/onap/cps/cpspath/parser/antlr4/CpsPath.g4",
        "patchSetId": 19
      },
      "lineNbr": 78,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-04T14:37:10Z",
      "side": 1,
      "message": "please conform to teh names defined in https://raw.githubusercontent.com/antlr/grammars-v4/master/xpath/xpath31/XPath31.g4\n\nEG : \u0027\u003d\u003e\u0027 ;\nGE : \u0027\u003e\u003d\u0027 ;\nGT : \u0027\u003e\u0027 ;\nLT : \u0027\u003c\u0027 ;",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 78,
        "endChar": 21
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86e91b31_95486615",
        "filename": "cps-path-parser/src/main/antlr4/org/onap/cps/cpspath/parser/antlr4/CpsPath.g4",
        "patchSetId": 19
      },
      "lineNbr": 78,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-04T16:40:26Z",
      "side": 1,
      "message": "above are just some example not exactly the one your are using, it does raise the question/opportunity to support both \u003d\u003e and \u003e\u003d \nand \u003c\u003d and \u003d\u003c)",
      "parentUuid": "e1e65867_fd48980a",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 78,
        "endChar": 21
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "373378e6_ab4b85c9",
        "filename": "cps-path-parser/src/main/java/org/onap/cps/cpspath/parser/CpsPathBuilder.java",
        "patchSetId": 19
      },
      "lineNbr": 89,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-04T14:37:10Z",
      "side": 1,
      "message": "refactor this using the spearet rules I suggested in the g4 file.\nSo you have 2 separate exit methods \nkepe any common code in a private method",
      "range": {
        "startLine": 89,
        "startChar": 16,
        "endLine": 89,
        "endChar": 33
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "53a5b090_502d8a26",
        "filename": "cps-path-parser/src/main/java/org/onap/cps/cpspath/parser/CpsPathBuilder.java",
        "patchSetId": 19
      },
      "lineNbr": 102,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-04T14:37:10Z",
      "side": 1,
      "message": "this should become less complex when you use separate condition for string and integer...",
      "range": {
        "startLine": 91,
        "startChar": 2,
        "endLine": 102,
        "endChar": 9
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "563d9d36_bd0c0de5",
        "filename": "cps-path-parser/src/main/java/org/onap/cps/cpspath/parser/CpsPathBuilder.java",
        "patchSetId": 19
      },
      "lineNbr": 216,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-04T14:37:10Z",
      "side": 1,
      "message": "if refactored correctly I dont think you need this check anymore",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 216,
        "endChar": 16
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1697b25d_c1bc4b3d",
        "filename": "cps-path-parser/src/main/java/org/onap/cps/cpspath/parser/CpsPathComparativeOperatorType.java",
        "patchSetId": 19
      },
      "lineNbr": 24,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-04T14:37:10Z",
      "side": 1,
      "message": "use teh same names as in th G4 file (GT, LT, GE, LE)",
      "range": {
        "startLine": 24,
        "startChar": 4,
        "endLine": 24,
        "endChar": 11
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bce5d88e_2262d51f",
        "filename": "cps-path-parser/src/test/groovy/org/onap/cps/cpspath/parser/CpsPathQuerySpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 140,
      "author": {
        "id": 8063
      },
      "writtenOn": "2023-05-04T13:07:22Z",
      "side": 1,
      "message": "NB: You may enrich unit testing having comprehensive descendant path like //child[@code\u003d2]/books[@price\u003e260]",
      "range": {
        "startLine": 140,
        "startChar": 12,
        "endLine": 140,
        "endChar": 107
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e57c6bf9_1ba3a22b",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/repository/FragmentQueryBuilder.java",
        "patchSetId": 19
      },
      "lineNbr": 108,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-04T14:37:10Z",
      "side": 1,
      "message": "this is gettignt o complex, please extract out method, possibly several methods to enhance readability",
      "range": {
        "startLine": 94,
        "startChar": 16,
        "endLine": 108,
        "endChar": 17
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5497531_e252ded5",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/functional/CpsQueryServiceIntegrationSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 82,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-04T14:37:10Z",
      "side": 1,
      "message": "you are not using combinations?!\nI wonder with my suggestions at teh parser wil it work with combinatiosn too...",
      "range": {
        "startLine": 82,
        "startChar": 30,
        "endLine": 82,
        "endChar": 42
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5dd27b2e_4a852267",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/functional/CpsQueryServiceIntegrationSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 97,
      "author": {
        "id": 8063
      },
      "writtenOn": "2023-05-04T13:07:22Z",
      "side": 1,
      "message": "NB: You may enrich unit tests having descendant cps path like this:\n\n\u0027the \"\u003c\" condition  where there is a result\u0027     | \u0027//categories[@code\u003d3]/books[@price\u003c13]\u0027 || 1                 | [\u0027The Colour of Magic\u0027]",
      "range": {
        "startLine": 97,
        "startChar": 12,
        "endLine": 97,
        "endChar": 112
      },
      "revId": "e5063b8ea5e9bae0070672dc7fc16dd8f328a313",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}