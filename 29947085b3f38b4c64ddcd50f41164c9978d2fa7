{
  "comments": [
    {
      "key": {
        "uuid": "f21cd567_e6045920",
        "filename": "cps-ncmp-events/src/main/resources/schemas/async/batch-event-schema-1.0.0.json",
        "patchSetId": 6
      },
      "lineNbr": 14,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-22T13:43:07Z",
      "side": 1,
      "message": "still version package here?!",
      "range": {
        "startLine": 14,
        "startChar": 55,
        "endLine": 14,
        "endChar": 57
      },
      "revId": "29947085b3f38b4c64ddcd50f41164c9978d2fa7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c2256f0e_417903ee",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/impl/async/BatchRecordFilterStrategy.java",
        "patchSetId": 6
      },
      "lineNbr": 45,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-22T13:43:07Z",
      "side": 1,
      "message": "IP suppose the version would be at the very end?\nthen startsWith would be the appropriate method here",
      "range": {
        "startLine": 45,
        "startChar": 35,
        "endLine": 45,
        "endChar": 43
      },
      "revId": "29947085b3f38b4c64ddcd50f41164c9978d2fa7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4142a22e_ac4d1a38",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/api/impl/async/NcmpAsyncBatchEventConsumerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 75,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-22T13:43:07Z",
      "side": 1,
      "message": "NB: dont fully understand why you need to use the mapper for the outgoing event but not for the incoming, I am sure you got it working now but can you maybe explain a little as reply to this comment? Thanks",
      "range": {
        "startLine": 75,
        "startChar": 33,
        "endLine": 75,
        "endChar": 170
      },
      "revId": "29947085b3f38b4c64ddcd50f41164c9978d2fa7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f338ba5_c1c6ab53",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/api/impl/async/NcmpAsyncBatchEventConsumerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 87,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-05-22T13:43:07Z",
      "side": 1,
      "message": "this should be a singular pipe, double pipe is used to separate the incoming parameters from the outgoing/expected values for example:\n\nparam1 | param 2 || expectedResultType | expectedMessage",
      "range": {
        "startLine": 87,
        "startChar": 60,
        "endLine": 87,
        "endChar": 62
      },
      "revId": "29947085b3f38b4c64ddcd50f41164c9978d2fa7",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}