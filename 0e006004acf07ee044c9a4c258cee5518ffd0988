{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "79c57c73_bb09d84e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-06-07T12:52:18Z",
      "side": 1,
      "message": "looks good to me.",
      "revId": "0e006004acf07ee044c9a4c258cee5518ffd0988",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e223958f_9775cd22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-06-07T13:50:09Z",
      "side": 1,
      "message": "Good idea to consume query-body from util.js",
      "revId": "0e006004acf07ee044c9a4c258cee5518ffd0988",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5dcb7028_c16b7e70",
        "filename": "k6-tests/ncmp/search-base.js",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-06-07T12:52:18Z",
      "side": 1,
      "message": "NB: we also have combined scenarios as well right ?\ndo you want to accomodate as well here?",
      "range": {
        "startLine": 45,
        "startChar": 38,
        "endLine": 45,
        "endChar": 46
      },
      "revId": "0e006004acf07ee044c9a4c258cee5518ffd0988",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67861297_51c148cd",
        "filename": "k6-tests/ncmp/search-base.js",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-06-07T13:10:03Z",
      "side": 1,
      "message": "What do you mean? You mean separate methods for each scenario?\n\n    function executeCmHandleSearchForModule();\n    function executeCmHandleSearchForProperty();\n    etc.",
      "parentUuid": "5dcb7028_c16b7e70",
      "range": {
        "startLine": 45,
        "startChar": 38,
        "endLine": 45,
        "endChar": 46
      },
      "revId": "0e006004acf07ee044c9a4c258cee5518ffd0988",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54e71e21_c8c8440f",
        "filename": "k6-tests/ncmp/search-base.js",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-06-07T13:55:13Z",
      "side": 1,
      "message": "I think I got Priyank\u0027s question. Since we don\u0027t have any module (k6 test) which query with multiple conditions at a time, thus Daniel don\u0027t need to have a query body to form in search-base.js\n\nOtherwise, it would be possible to have that constant payload which contain both conditions like \"hasAllModules\" and \"hasAllProperties\" at a time.\n\nFor this commit, this may be not required.",
      "parentUuid": "67861297_51c148cd",
      "range": {
        "startLine": 45,
        "startChar": 38,
        "endLine": 45,
        "endChar": 46
      },
      "revId": "0e006004acf07ee044c9a4c258cee5518ffd0988",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e677ca3f_a1c07be6",
        "filename": "k6-tests/ncmp/search-base.js",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-06-07T14:00:11Z",
      "side": 1,
      "message": "Thanks Halil, I understand now.\nYes, it would defo be nice to have combined scenario. But for now, we\u0027ve only been asked to do no-filter, 1 module, 1 property.",
      "parentUuid": "54e71e21_c8c8440f",
      "range": {
        "startLine": 45,
        "startChar": 38,
        "endLine": 45,
        "endChar": 46
      },
      "revId": "0e006004acf07ee044c9a4c258cee5518ffd0988",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3223dcf_5802f4ff",
        "filename": "k6-tests/ncmp/search-base.js",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-06-07T14:21:01Z",
      "side": 1,
      "message": "Oh yeah..\nI meant what Halil mentioned ðŸ˜„\nAlright. I get it. Thanks.",
      "parentUuid": "e677ca3f_a1c07be6",
      "range": {
        "startLine": 45,
        "startChar": 38,
        "endLine": 45,
        "endChar": 46
      },
      "revId": "0e006004acf07ee044c9a4c258cee5518ffd0988",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9178831_49f49089",
        "filename": "k6-tests/ncmp/search-base.js",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-06-07T14:47:40Z",
      "side": 1,
      "message": "You are welcome guys ðŸ˜Š",
      "parentUuid": "b3223dcf_5802f4ff",
      "range": {
        "startLine": 45,
        "startChar": 38,
        "endLine": 45,
        "endChar": 46
      },
      "revId": "0e006004acf07ee044c9a4c258cee5518ffd0988",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0e006004acf07ee044c9a4c258cee5518ffd0988",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "0e006004acf07ee044c9a4c258cee5518ffd0988",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}