{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a2112bf4_41476e62",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-08-20T15:27:09Z",
      "side": 1,
      "message": "recheck",
      "revId": "7347bbd9655ba6f713241af1ad3667ee22c85016",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e3d9adf_e8741b26",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/InventoryPersistenceImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 228,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-08-20T14:47:02Z",
      "side": 1,
      "message": "NB: just asking , is there any limit on the number of OR condition we can have ? ( in terms of database? )",
      "range": {
        "startLine": 225,
        "startChar": 5,
        "endLine": 228,
        "endChar": 5
      },
      "revId": "7347bbd9655ba6f713241af1ad3667ee22c85016",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61b15a29_ef532310",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/InventoryPersistenceImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 228,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-08-20T14:53:45Z",
      "side": 1,
      "message": "Postgres allows SQL query to be 1GB string, so in theory we could send a query with millions of alternate IDs.\n\nInterestingly we do internal batching when deleting cm-handles (using Lists.partition), it might be worth considering this for create/update too.",
      "parentUuid": "6e3d9adf_e8741b26",
      "range": {
        "startLine": 225,
        "startChar": 5,
        "endLine": 228,
        "endChar": 5
      },
      "revId": "7347bbd9655ba6f713241af1ad3667ee22c85016",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5724783c_6a83b601",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/InventoryPersistenceImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 228,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-08-20T15:01:03Z",
      "side": 1,
      "message": "Oh mighty postgres ðŸ˜Š\nYeah. thats what I wanted to point out.. Batching..\nProbably not for this patch.\nBut just a thought to be considered.",
      "parentUuid": "61b15a29_ef532310",
      "range": {
        "startLine": 225,
        "startChar": 5,
        "endLine": 228,
        "endChar": 5
      },
      "revId": "7347bbd9655ba6f713241af1ad3667ee22c85016",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fb40b93a_67d64ea6",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/InventoryPersistenceImpl.java",
        "patchSetId": 5
      },
      "lineNbr": 228,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-08-21T09:33:43Z",
      "side": 1,
      "message": "Not really an issue for now since users always send batches of no more than 100 CM-handles.\n(An alternate solution I\u0027d prefer is to simply throw PayloadTooLargeException for registration, like we do for data operations).",
      "parentUuid": "5724783c_6a83b601",
      "range": {
        "startLine": 225,
        "startChar": 5,
        "endLine": 228,
        "endChar": 5
      },
      "revId": "7347bbd9655ba6f713241af1ad3667ee22c85016",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7347bbd9655ba6f713241af1ad3667ee22c85016",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7347bbd9655ba6f713241af1ad3667ee22c85016",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}