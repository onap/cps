{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "03abcb7f_46021231",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 24
      },
      "lineNbr": 0,
      "author": {
        "id": 8513
      },
      "writtenOn": "2025-08-29T07:19:10Z",
      "side": 1,
      "message": "Resolved",
      "revId": "0d3f242e7198b9cc983e806a9772962e635c3012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71d37e98_4bef56fe",
        "filename": "cps-application/src/test/groovy/org/onap/cps/logging/MdcServletFilterSpec.groovy",
        "patchSetId": 24
      },
      "lineNbr": 36,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-09-01T09:21:19Z",
      "side": 1,
      "message": "This is not a slogan. Do not mention expectations or conditions in  basic test slogan\nin this case \u0027MDC Filter change handling\u0027 will do",
      "range": {
        "startLine": 36,
        "startChar": 9,
        "endLine": 36,
        "endChar": 69
      },
      "revId": "0d3f242e7198b9cc983e806a9772962e635c3012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f274070_42d72b10",
        "filename": "cps-application/src/test/groovy/org/onap/cps/logging/MdcServletFilterSpec.groovy",
        "patchSetId": 24
      },
      "lineNbr": 39,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-09-01T09:21:19Z",
      "side": 1,
      "message": "add a 3rd header \u0027Other Header\u0027 -\u003e \u0027Other value\u0027",
      "range": {
        "startLine": 39,
        "startChar": 14,
        "endLine": 39,
        "endChar": 36
      },
      "revId": "0d3f242e7198b9cc983e806a9772962e635c3012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23b3bf8c_df8db97d",
        "filename": "cps-application/src/test/groovy/org/onap/cps/logging/MdcServletFilterSpec.groovy",
        "patchSetId": 24
      },
      "lineNbr": 39,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-09-01T09:59:55Z",
      "side": 1,
      "message": "instead mock any possile header, see sampel shared with Priyank",
      "parentUuid": "5f274070_42d72b10",
      "range": {
        "startLine": 39,
        "startChar": 14,
        "endLine": 39,
        "endChar": 36
      },
      "revId": "0d3f242e7198b9cc983e806a9772962e635c3012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1e27025_acdc2c16",
        "filename": "cps-application/src/test/groovy/org/onap/cps/logging/MdcServletFilterSpec.groovy",
        "patchSetId": 24
      },
      "lineNbr": 42,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-09-01T09:21:19Z",
      "side": 1,
      "message": "during the filter chain call MDC only contain the expected headers",
      "range": {
        "startLine": 42,
        "startChar": 15,
        "endLine": 42,
        "endChar": 46
      },
      "revId": "0d3f242e7198b9cc983e806a9772962e635c3012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "64d2a458_b561e21c",
        "filename": "cps-application/src/test/groovy/org/onap/cps/logging/MdcServletFilterSpec.groovy",
        "patchSetId": 24
      },
      "lineNbr": 43,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-09-01T09:21:19Z",
      "side": 1,
      "message": "you are mocking behavior here, not asserting!\nit shodu start with: 1 *",
      "range": {
        "startLine": 43,
        "startChar": 13,
        "endLine": 43,
        "endChar": 37
      },
      "revId": "0d3f242e7198b9cc983e806a9772962e635c3012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbcb5d45_077df9c2",
        "filename": "cps-application/src/test/groovy/org/onap/cps/logging/MdcServletFilterSpec.groovy",
        "patchSetId": 24
      },
      "lineNbr": 43,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-09-01T09:59:55Z",
      "side": 1,
      "message": "it took me a while to see what is happening here its a bit unusual but is seems to work.\nI dont think I did anything like this ever before but you are assert the content of the static MDC map at teh moment this call is made...\n(did you verify when you run it with a change value that it fail?!",
      "range": {
        "startLine": 43,
        "startChar": 86,
        "endLine": 43,
        "endChar": 87
      },
      "revId": "0d3f242e7198b9cc983e806a9772962e635c3012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "807dbed1_690775da",
        "filename": "cps-application/src/test/groovy/org/onap/cps/logging/MdcServletFilterSpec.groovy",
        "patchSetId": 24
      },
      "lineNbr": 44,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-09-01T09:21:19Z",
      "side": 1,
      "message": "assert that MDC does NOT contain the \u0027Other Header\u0027",
      "range": {
        "startLine": 44,
        "startChar": 20,
        "endLine": 44,
        "endChar": 26
      },
      "revId": "0d3f242e7198b9cc983e806a9772962e635c3012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9f68f7db_2067fcfe",
        "filename": "cps-application/src/test/groovy/org/onap/cps/logging/MdcServletFilterSpec.groovy",
        "patchSetId": 24
      },
      "lineNbr": 46,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-09-01T09:21:19Z",
      "side": 1,
      "message": "NB: indent this part",
      "range": {
        "startLine": 44,
        "startChar": 0,
        "endLine": 46,
        "endChar": 9
      },
      "revId": "0d3f242e7198b9cc983e806a9772962e635c3012",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}