{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6f6c5fe8_276b8a51",
        "filename": "k6-tests/teardown.sh",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-08-26T16:09:52Z",
      "side": 1,
      "message": "if we always should clean the old images, then why do we need an environment variable to control the feature?\n\nAlso, where should we set this environment variable e.g. on the test server if it is needed?",
      "range": {
        "startLine": 23,
        "startChar": 30,
        "endLine": 23,
        "endChar": 51
      },
      "revId": "dacc217afe3e4ae9f1bda96a285929016204701e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4e199789_4573e115",
        "filename": "k6-tests/teardown.sh",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-08-26T19:23:52Z",
      "side": 1,
      "message": "CLEAN_DOCKER_IMAGES has a default value of 0, so it is off by default. This is so that if you are running k6 tests locally, it does not delete your locally-built images.\nOnly on the k6 Jenkins job do we clean the images.",
      "parentUuid": "6f6c5fe8_276b8a51",
      "range": {
        "startLine": 23,
        "startChar": 30,
        "endLine": 23,
        "endChar": 51
      },
      "revId": "dacc217afe3e4ae9f1bda96a285929016204701e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0ee8189_fc914bbb",
        "filename": "k6-tests/teardown.sh",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-08-27T08:34:50Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4e199789_4573e115",
      "range": {
        "startLine": 23,
        "startChar": 30,
        "endLine": 23,
        "endChar": 51
      },
      "revId": "dacc217afe3e4ae9f1bda96a285929016204701e",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "dacc217afe3e4ae9f1bda96a285929016204701e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "dacc217afe3e4ae9f1bda96a285929016204701e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}