{
  "comments": [
    {
      "key": {
        "uuid": "13752ce2_24ddfe1c",
        "filename": "cps-rest/src/main/java/org/onap/cps/config/WebSecurityConfig.java",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-03-04T08:49:19Z",
      "side": 1,
      "message": "the actuator base path is a configuration property\ni\u0027d suggest using a \n@Value(\"${management.endpoints.web.base-path}\")\nannotated property for it",
      "range": {
        "startLine": 36,
        "startChar": 59,
        "endLine": 36,
        "endChar": 66
      },
      "revId": "c140f883b85b58efdd9f55ccb4cbe06ad66f1fe8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4cbd548_a376ccd3",
        "filename": "cps-rest/src/main/java/org/onap/cps/config/WebSecurityConfig.java",
        "patchSetId": 10
      },
      "lineNbr": 36,
      "author": {
        "id": 5658
      },
      "writtenOn": "2021-03-04T14:15:19Z",
      "side": 1,
      "message": "I think that Spring does not support @Value for static fields.",
      "parentUuid": "13752ce2_24ddfe1c",
      "range": {
        "startLine": 36,
        "startChar": 59,
        "endLine": 36,
        "endChar": 66
      },
      "revId": "c140f883b85b58efdd9f55ccb4cbe06ad66f1fe8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d70175ba_295aedc3",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 10
      },
      "lineNbr": 178,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-03-04T10:03:36Z",
      "side": 1,
      "message": "is it possible to extract out a common method in a baseclass that takes in an endpoint and and operation (enum?) and parameter map to avoid all this duplication and maintenancen?",
      "range": {
        "startLine": 178,
        "startChar": 28,
        "endLine": 178,
        "endChar": 43
      },
      "revId": "c140f883b85b58efdd9f55ccb4cbe06ad66f1fe8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1243c54b_65e5e9c3",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 10
      },
      "lineNbr": 178,
      "author": {
        "id": 5658
      },
      "writtenOn": "2021-03-04T16:03:36Z",
      "side": 1,
      "message": "I was looking at it and it seems to me that refactoring with extract method will provide less readable and more error prone code as the extracted method would need different parameters such as:\n\n```\nMockHttpServletResponse perform(\n    HttpMethod httpMethod,\n    GString endpoint,\n    Map\u003cString, String\u003e params,\n    String content, MediaType mediaType)\n```\n\nIt could also become a long list pararmeter method depending on future changes needed for the requests.\n\nI have a preference for the current implementation.\n\nDid you have something different in mind for this refactoring ?",
      "parentUuid": "d70175ba_295aedc3",
      "range": {
        "startLine": 178,
        "startChar": 28,
        "endLine": 178,
        "endChar": 43
      },
      "revId": "c140f883b85b58efdd9f55ccb4cbe06ad66f1fe8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61d443f9_35a47c40",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/exceptions/CpsRestExceptionHandlerSpec.groovy",
        "patchSetId": 10
      },
      "lineNbr": 182,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-03-04T10:03:36Z",
      "side": 1,
      "message": "not obvious why this is invalid, I presume this code is incorrect?!\ncan you use a string her lie \u0027Basic Invalid Token\u0027?",
      "range": {
        "startLine": 182,
        "startChar": 68,
        "endLine": 182,
        "endChar": 84
      },
      "revId": "c140f883b85b58efdd9f55ccb4cbe06ad66f1fe8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab1b9a51_edbf2fa2",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/exceptions/CpsRestExceptionHandlerSpec.groovy",
        "patchSetId": 10
      },
      "lineNbr": 182,
      "author": {
        "id": 5658
      },
      "writtenOn": "2021-03-04T16:03:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "61d443f9_35a47c40",
      "range": {
        "startLine": 182,
        "startChar": 68,
        "endLine": 182,
        "endChar": 84
      },
      "revId": "c140f883b85b58efdd9f55ccb4cbe06ad66f1fe8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8c38054_796d6102",
        "filename": "docker-compose/docker-compose.yml",
        "patchSetId": 10
      },
      "lineNbr": 23,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-03-04T10:03:36Z",
      "side": 1,
      "message": "oops",
      "range": {
        "startLine": 23,
        "startChar": 12,
        "endLine": 23,
        "endChar": 13
      },
      "revId": "c140f883b85b58efdd9f55ccb4cbe06ad66f1fe8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}