{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "af252b06_d3c0b309",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-08-01T16:36:39Z",
      "side": 1,
      "message": "Implementation is good in terms of generic impl. by using collection, but would be nice by having an extra unit test.",
      "revId": "f11f294188ac8f1891c4468e2242462127c73930",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10f70963_899bb049",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/cmnotificationsubscription/ncmp/NcmpOutEventMapper.java",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-08-01T12:11:40Z",
      "side": 1,
      "message": "Should this also be Set?",
      "range": {
        "startLine": 107,
        "startChar": 14,
        "endLine": 107,
        "endChar": 18
      },
      "revId": "f11f294188ac8f1891c4468e2242462127c73930",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b9dcd9e_ca8f4f88",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/cmnotificationsubscription/ncmp/NcmpOutEventMapper.java",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-08-01T13:56:24Z",
      "side": 1,
      "message": "not needed now since already the target DS is a Set now.\nso no benefit.\nIf I didnt want to change the schema then I could have also done this change and it would have fixed the issue ðŸ˜Š",
      "parentUuid": "10f70963_899bb049",
      "range": {
        "startLine": 107,
        "startChar": 14,
        "endLine": 107,
        "endChar": 18
      },
      "revId": "f11f294188ac8f1891c4468e2242462127c73930",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0245fee2_aae2b082",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/impl/cmnotificationsubscription/ncmp/NcmpOutEventMapperSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-08-01T16:36:39Z",
      "side": 1,
      "message": "NB: The reason why this slip through since insufficient unit test which didn\u0027t have common cm-handle. I would add one more ch-handle that is the same to these and testing it if you have uniuque cm handles at the end to forward NcmpOutEvent.",
      "range": {
        "startLine": 41,
        "startChar": 1,
        "endLine": 43,
        "endChar": 127
      },
      "revId": "f11f294188ac8f1891c4468e2242462127c73930",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f11f294188ac8f1891c4468e2242462127c73930",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f11f294188ac8f1891c4468e2242462127c73930",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}