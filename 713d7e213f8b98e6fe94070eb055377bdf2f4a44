{
  "comments": [
    {
      "key": {
        "uuid": "7757eea2_43f4e3b5",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/repository/FragmentQueryBuilder.java",
        "patchSetId": 6
      },
      "lineNbr": 75,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-04-12T11:34:18Z",
      "side": 1,
      "message": "Not needed, this check is already done in addTextFunctionCondition",
      "range": {
        "startLine": 75,
        "startChar": 8,
        "endLine": 75,
        "endChar": 54
      },
      "revId": "713d7e213f8b98e6fe94070eb055377bdf2f4a44",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d727db48_fab85d08",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/repository/FragmentQueryBuilder.java",
        "patchSetId": 6
      },
      "lineNbr": 78,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-04-12T11:34:18Z",
      "side": 1,
      "message": "Not needed, this check is already done in addContainsFunctionCondition",
      "range": {
        "startLine": 78,
        "startChar": 8,
        "endLine": 78,
        "endChar": 58
      },
      "revId": "713d7e213f8b98e6fe94070eb055377bdf2f4a44",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62c72bf8_34b445d8",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/repository/FragmentQueryBuilder.java",
        "patchSetId": 6
      },
      "lineNbr": 161,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-04-12T11:34:18Z",
      "side": 1,
      "message": "We should not directly append leaf name and value. Query parameters should be used (e.g. to avoid SQL injection).\nSomething like this:\n  sqlStringBuilder.append(\" AND attributes -\u003e\u003e :containsLeafName LIKE :containsValue\");\n  queryParameters.put(\"containsLeafName\", cpsPathQuery.getContainsFunctionConditionLeafName());\n  queryParameters.put(\"containsValue\", cpsPathQuery.getContainsFunctionConditionValue());",
      "range": {
        "startLine": 157,
        "startChar": 58,
        "endLine": 161,
        "endChar": 100
      },
      "revId": "713d7e213f8b98e6fe94070eb055377bdf2f4a44",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}