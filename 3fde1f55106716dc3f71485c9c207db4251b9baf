{
  "comments": [
    {
      "key": {
        "uuid": "9ed9e10c_bbd90b83",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-01-15T16:58:05Z",
      "side": 1,
      "message": "save to turn around to prevent issues with null values\n(just in case there are other comments,  otherwise just for future reference)",
      "range": {
        "startLine": 146,
        "startChar": 16,
        "endLine": 146,
        "endChar": 83
      },
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9bf4eb66_38151590",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-01-15T17:05:24Z",
      "side": 1,
      "message": "invert the condition and remove the else part after\nif () {\n   exception..\n}\n...",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "414f0d8a_77c0491b",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-01-18T08:01:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9bf4eb66_38151590",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9f79c938_87cff715",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceImpl.java",
        "patchSetId": 6
      },
      "lineNbr": 146,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-01-18T14:31:40Z",
      "side": 1,
      "message": "actually bets practice is to use the positive block first as (a ! in !\u003d is often over looked) I think there might even be a SQ rule for this.\nMu maybe only when there is a return in that block  but since you thrown an exception you can reduce complexity by doing the swap you just did, so on balance I think it is good (now)\n\nIgnore my first comment that does only apply to .equals()",
      "parentUuid": "414f0d8a_77c0491b",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "30d77200_a20b637b",
        "filename": "cps-ri/src/test/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceTest.java",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-01-15T17:05:24Z",
      "side": 1,
      "message": "global comment, I think it will be good to start adding headers on each test with description of what is being testes, etc..",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "716498c8_4f95ad72",
        "filename": "cps-ri/src/test/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceTest.java",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-01-18T08:01:48Z",
      "side": 1,
      "message": "labels are available in junit5, currently we are using junit4 (comes with spring-boot-test)",
      "parentUuid": "30d77200_a20b637b",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c51dd4d8_adfbed15",
        "filename": "cps-ri/src/test/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceTest.java",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-01-18T08:13:15Z",
      "side": 1,
      "message": "@Team would you agree on having javadoc with the description of the tests? or is it ok as it is? Based on reaction Ruslan will proceed.",
      "parentUuid": "716498c8_4f95ad72",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1b58776_18df735b",
        "filename": "cps-ri/src/test/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceTest.java",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 6841
      },
      "writtenOn": "2021-01-18T11:08:47Z",
      "side": 1,
      "message": "From my understanding it is best practice to avoid javadoc on test code. IMO we should try avoid complex test code that require javadoc and make the test names/parameters self descriptive.",
      "parentUuid": "c51dd4d8_adfbed15",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f4e57c6d_78939a58",
        "filename": "cps-ri/src/test/java/org/onap/cps/spi/impl/CpsModulePersistenceServiceTest.java",
        "patchSetId": 6
      },
      "lineNbr": 188,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-01-18T14:31:40Z",
      "side": 1,
      "message": "I love to get time to try these test in Groovy/Spock I think it is possible without much change and it get much more readable tests...",
      "parentUuid": "f1b58776_18df735b",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f487ad2f_490ef082",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/exceptions/DataInUseException.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-01-15T17:05:24Z",
      "side": 1,
      "message": "Add documentation",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d241740_4d0dafdc",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/exceptions/DataInUseException.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-01-18T08:01:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f487ad2f_490ef082",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "78547d3f_c4403e92",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/exceptions/SchemaSetInUseException.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-01-15T17:05:24Z",
      "side": 1,
      "message": "Add documentation",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "963053c1_638f78fe",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/exceptions/SchemaSetInUseException.java",
        "patchSetId": 6
      },
      "lineNbr": 22,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-01-18T08:01:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78547d3f_c4403e92",
      "revId": "3fde1f55106716dc3f71485c9c207db4251b9baf",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}