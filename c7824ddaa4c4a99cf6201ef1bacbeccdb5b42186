{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "64340493_c7eb1877",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-02-06T18:08:32Z",
      "side": 1,
      "message": "Hi lee Anjella, I was just having a quick look to get an ide of the latest in this Epic.\nI do have some question on this patch tough, maybe we can discuss in the morning please?",
      "revId": "c7824ddaa4c4a99cf6201ef1bacbeccdb5b42186",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd7c18a4_2c5a88a0",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/impl/events/cmsubscription/service/CmSubscriptionValidationServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-02-07T10:02:50Z",
      "side": 1,
      "message": "Constant should be inlined - it is short and only used once",
      "range": {
        "startLine": 44,
        "startChar": 32,
        "endLine": 45,
        "endChar": 49
      },
      "revId": "c7824ddaa4c4a99cf6201ef1bacbeccdb5b42186",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78752752_caca1ca6",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/impl/events/cmsubscription/service/CmSubscriptionValidationServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-02-06T18:08:32Z",
      "side": 1,
      "message": "this method is also test uniqueness, it is important to show that in the name\ne.g. isValidUniqueSubscriptionId\n\nBut to be honest I think test for valid naming (correct characters etc) should be separate from tets for UNIQUE you probably need to report different errors for each case!\nFinally I don\u0027t understand why you check the CPS Path heer, is the end user creating a CPS path or is it hardcoded in NCMP I would assume the latter and then you dont need to check the CPS Path (but only the ID itself, do we have any agreement/limitation on what the ID can be ?!)",
      "range": {
        "startLine": 48,
        "startChar": 19,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "c7824ddaa4c4a99cf6201ef1bacbeccdb5b42186",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7baddfe5_d7b52f34",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/impl/events/cmsubscription/service/CmSubscriptionValidationServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-02-07T10:02:50Z",
      "side": 1,
      "message": "This doesn\u0027t check for valid characters, it only checks for uniqueness (the string format is to format the path query). It could be written more simply as:\n\n    public boolean isUniqueSubscriptionId(final String subscriptionId) {\n        return cpsQueryService.queryDataNodes(NCMP_DATASPACE_NAME,  SUBSCRIPTION_ANCHOR_NAME, \n                \"//filter/subscribers[text()\u003d\u0027\" + subscriptionId + \"\u0027]\",\n                FetchDescendantsOption.OMIT_DESCENDANTS).isEmpty();\n    }",
      "parentUuid": "78752752_caca1ca6",
      "range": {
        "startLine": 48,
        "startChar": 19,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "c7824ddaa4c4a99cf6201ef1bacbeccdb5b42186",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "090f2fe2_7d7ded42",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/impl/events/cmsubscription/service/CmSubscriptionValidationServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-02-07T10:25:50Z",
      "side": 1,
      "message": "FYI we should validate _subscriptionId_ here or in another method, using:\n\n    cpsValidator.validateNameCharacters(subscriptionId);",
      "parentUuid": "7baddfe5_d7b52f34",
      "range": {
        "startLine": 48,
        "startChar": 19,
        "endLine": 48,
        "endChar": 40
      },
      "revId": "c7824ddaa4c4a99cf6201ef1bacbeccdb5b42186",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c7824ddaa4c4a99cf6201ef1bacbeccdb5b42186",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c7824ddaa4c4a99cf6201ef1bacbeccdb5b42186",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}