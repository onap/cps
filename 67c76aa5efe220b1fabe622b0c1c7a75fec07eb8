{
  "comments": [
    {
      "key": {
        "uuid": "95f42230_a6e2bd93",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/CpsRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 6679
      },
      "writtenOn": "2020-11-11T12:48:10Z",
      "side": 1,
      "message": "what about use modelmapper\n\nhttps://www.baeldung.com/entity-to-and-from-dto-for-a-java-spring-application",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8f9b5dae_9f846242",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/CpsRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T13:19:33Z",
      "side": 1,
      "message": "ModelMapper is a good suggestion. Though I do not want to use it and explicitly create DTOs here for our service layer, which will be pretty standard and will form part of our API. Model mapper will tie it to a entity and its datatypes, hence introduce coupling, which we all do not want. Entities  might mostly be the same(unless we use something specific to a DB like JSONB in postresql) for RDBMS but may change in case of some NoSQL Db. If we introduce a interface above the Entities, then this can be considered again.",
      "parentUuid": "95f42230_a6e2bd93",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f7314a0_16b80c9a",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/CpsRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 6679
      },
      "writtenOn": "2020-11-12T14:59:26Z",
      "side": 1,
      "message": "you will be using modelmapper to map Anchor to AnchorDetails, same as you do here.\nbut decoupling the responsability of mapping from CpsRestController. Not mapping to the entity.",
      "parentUuid": "8f9b5dae_9f846242",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f00ad19_a2684ceb",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/CpsRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-10T17:09:26Z",
      "side": 1,
      "message": "I think the last time I talked to Tony about this he recommended to return \u0027the id the users needs to get the object\u0027 which is the user defined anchorName in this case\n(I know the user supplied it himself but still its good to stick to the pattern of retuning an ide upon create)",
      "range": {
        "startLine": 67,
        "startChar": 35,
        "endLine": 67,
        "endChar": 38
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b99b57e8_e263dfb5",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/CpsRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T11:32:24Z",
      "side": 1,
      "message": "I think we decided not to return anything. Remind me if i am wrong. If we do return, it should be actaul id, but sice we decided not to expose that, returning anchor name does not make sense to me. Open for discussion.....",
      "parentUuid": "7f00ad19_a2684ceb",
      "range": {
        "startLine": 67,
        "startChar": 35,
        "endLine": 67,
        "endChar": 38
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dceff2f_878f40db",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/CpsRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-12T15:24:16Z",
      "side": 1,
      "message": "the discussion I had with Tony as after that, just to re-iterator Tony and I would like to return the id used by the client in this case the anchorName",
      "parentUuid": "b99b57e8_e263dfb5",
      "range": {
        "startLine": 67,
        "startChar": 35,
        "endLine": 67,
        "endChar": 38
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "936437aa_455f285e",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/CpsRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-13T06:38:59Z",
      "side": 1,
      "message": "OK. Do you want it only in REST or Java API as well?",
      "parentUuid": "0dceff2f_878f40db",
      "range": {
        "startLine": 67,
        "startChar": 35,
        "endLine": 67,
        "endChar": 38
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "259ca2a9_2f85eb8e",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/entities/Fragment.java",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 6841
      },
      "writtenOn": "2020-11-10T16:39:28Z",
      "side": 1,
      "message": "I think ModuleEntity should also implement Serializable.",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0b0dcba_38bc16c9",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/entities/Fragment.java",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T11:32:24Z",
      "side": 1,
      "message": "yes, all entities should, I changed the ones used in this review. Also, I remember giving a comment to someone to rename ModuleEntity to Module. I can do that as a separate commit.",
      "parentUuid": "259ca2a9_2f85eb8e",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c2bfcdd_5590e787",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/FragmentPersistenceServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-10T17:09:26Z",
      "side": 1,
      "message": "I know these are onyl a few lines but it might be good to separate methods \nlike\n- verifyDataSacepExists(...)\n- verifyMoudleExists(...)",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 52,
        "endChar": 9
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9be33a73_0a42a382",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/FragmentPersistenceServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T11:32:24Z",
      "side": 1,
      "message": "if some other method in future needs it, will refactor then.",
      "parentUuid": "9c2bfcdd_5590e787",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 52,
        "endChar": 9
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd3c9aa3_9170033c",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/FragmentPersistenceServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-12T15:24:16Z",
      "side": 1,
      "message": "I would prefer if you do it now...",
      "parentUuid": "9be33a73_0a42a382",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 52,
        "endChar": 9
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84bdc6a4_0908bcf0",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/FragmentPersistenceServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-13T06:38:59Z",
      "side": 1,
      "message": "The behavior to return boolean or throw exception in newly created method is very use case specific andd hence the method(of just a single line) may not be so useful.So, if in future we do drift towards one approach or the other would make sense to add method then to avoid rework. If you still want this , let me know which approach is your preference and i will happily implement.",
      "parentUuid": "dd3c9aa3_9170033c",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 52,
        "endChar": 9
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fe5ecf2_5b2654f1",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/ModelPersistencyServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 7362
      },
      "writtenOn": "2020-11-11T08:53:59Z",
      "side": 1,
      "message": "dependency injection via constructor is more preferable.\nit allows making fields final, clearly instructs the components \ninitialization order, simplifies unit testing etc.\n\nhttps://stackoverflow.com/questions/40620000/spring-autowire-on-properties-vs-constructor\n\ni\u0027d suggest revert this change",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d30b8941_dd9dca03",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/ModelPersistencyServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T11:32:24Z",
      "side": 1,
      "message": "This has been a debate ever since spring launched, i prefer setter injection only as a matter of style. There are loads of blogs supporting each side. If others prefer constructor, i\u0027d be happy to change.",
      "parentUuid": "0fe5ecf2_5b2654f1",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b23bac1_1306af8b",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/ModelPersistencyServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 6679
      },
      "writtenOn": "2020-11-11T11:56:40Z",
      "side": 1,
      "message": "I usually go with constructor. But not strong attachment, I open to any option as long we keep consistency among the project",
      "parentUuid": "d30b8941_dd9dca03",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c9781a8_f47352c2",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/ModelPersistencyServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T12:27:49Z",
      "side": 1,
      "message": "I agree, it should be consistent across the project. let\u0027s see what Bruno and Toine think. I propose setter injection.",
      "parentUuid": "0b23bac1_1306af8b",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57b23a9a_7a6f3320",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/ModelPersistencyServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-12T15:24:16Z",
      "side": 1,
      "message": "I don\u0027t have a strong opinion, only thing I can add is that setter injection does not give us problems with testing as Groovy is well able to override private variables (we have already doen this in some tests)",
      "parentUuid": "7c9781a8_f47352c2",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbd7579a_6c1255fc",
        "filename": "cps-ri/src/main/resources/schema.sql",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-10T17:09:26Z",
      "side": 1,
      "message": "same module revision can be added to more than one dataspace so you need to add datapace_id to the constraint too",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 21
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc413cd0_bfe9d2ff",
        "filename": "cps-ri/src/main/resources/schema.sql",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T11:32:24Z",
      "side": 1,
      "message": "i think this was added as part of Aditya\u0027s code, I just moved it up. Please create a separate task as this is not relevant to this story.",
      "parentUuid": "dbd7579a_6c1255fc",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 21
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb7dafa2_aec8deac",
        "filename": "cps-ri/src/main/resources/schema.sql",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-12T15:24:16Z",
      "side": 1,
      "message": "we came to realize it as part of your user story (and missed in aditya\u0027s story which is already closed) lets just be pragmatic and update it here too now.\nYou can also see it is making it consistent we the unique contraints for anchors.",
      "parentUuid": "bc413cd0_bfe9d2ff",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 21
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d261ef81_681ab5fa",
        "filename": "cps-ri/src/main/resources/schema.sql",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-13T06:38:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fb7dafa2_aec8deac",
      "range": {
        "startLine": 27,
        "startChar": 12,
        "endLine": 27,
        "endChar": 21
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e19171e_bf0b434e",
        "filename": "cps-ri/src/main/resources/schema.sql",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-10T17:09:26Z",
      "side": 1,
      "message": "not sure if the order really matter here but logically I would like to see the dataspace_id first as it is the \u0027highest level\u0027 entity",
      "range": {
        "startLine": 42,
        "startChar": 32,
        "endLine": 42,
        "endChar": 44
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6078ba0_6cdf8265",
        "filename": "cps-ri/src/main/resources/schema.sql",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T11:32:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8e19171e_bf0b434e",
      "range": {
        "startLine": 42,
        "startChar": 32,
        "endLine": 42,
        "endChar": 44
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc8de75c_19d2a963",
        "filename": "cps-ri/src/main/resources/schema.sql",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-10T17:09:26Z",
      "side": 1,
      "message": "Not sure what good this index is...",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 97
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b40b953_123aa395",
        "filename": "cps-ri/src/main/resources/schema.sql",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T11:32:24Z",
      "side": 1,
      "message": "Flavio can best answer that, I fixed left behind broken index.",
      "parentUuid": "bc8de75c_19d2a963",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 97
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fbb9446c_e34fd4ea",
        "filename": "cps-ri/src/main/resources/schema.sql",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-12T15:24:16Z",
      "side": 1,
      "message": "OK\u003c I\u0027ll Create a user story to revisit the DB schema, indexes etc in a little while.\nSee https://jira.onap.org/browse/CPS-81",
      "parentUuid": "5b40b953_123aa395",
      "range": {
        "startLine": 64,
        "startChar": 0,
        "endLine": 64,
        "endChar": 97
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2641d352_bae37b1f",
        "filename": "cps-service/src/main/java/org/onap/cps/api/CpService.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 6841
      },
      "writtenOn": "2020-11-10T16:39:28Z",
      "side": 1,
      "message": "Remove unused import.",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b849b2bb_893bfb9d",
        "filename": "cps-service/src/main/java/org/onap/cps/api/CpService.java",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T11:32:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2641d352_bae37b1f",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1286f72_20c5e4de",
        "filename": "cps-service/src/main/java/org/onap/cps/api/CpService.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 6679
      },
      "writtenOn": "2020-11-11T12:07:58Z",
      "side": 1,
      "message": "remove final from interfaces",
      "range": {
        "startLine": 86,
        "startChar": 22,
        "endLine": 86,
        "endChar": 28
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a58da543_44f3ce32",
        "filename": "cps-service/src/main/java/org/onap/cps/api/CpService.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T12:27:49Z",
      "side": 1,
      "message": "my IDE auto adds it for me, removed now.",
      "parentUuid": "a1286f72_20c5e4de",
      "range": {
        "startLine": 86,
        "startChar": 22,
        "endLine": 86,
        "endChar": 28
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9683f2c9_d2342df2",
        "filename": "cps-service/src/main/java/org/onap/cps/api/CpService.java",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-11-12T15:24:16Z",
      "side": 1,
      "message": "does not make difference for compiler, if your IDE keeps doing it I wouldn\u0027t worry about it",
      "parentUuid": "a58da543_44f3ce32",
      "range": {
        "startLine": 86,
        "startChar": 22,
        "endLine": 86,
        "endChar": 28
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5c986c19_32f27a38",
        "filename": "cps-service/src/main/java/org/onap/cps/api/model/AnchorDetails.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 6841
      },
      "writtenOn": "2020-11-10T16:39:28Z",
      "side": 1,
      "message": "Change to private",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 41,
        "endChar": 27
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "256fcf81_2d5ce9d7",
        "filename": "cps-service/src/main/java/org/onap/cps/api/model/AnchorDetails.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T11:32:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c986c19_32f27a38",
      "range": {
        "startLine": 34,
        "startChar": 0,
        "endLine": 41,
        "endChar": 27
      },
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "43d95749_50a0b918",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/FragmentPersistenceService.java",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 6679
      },
      "writtenOn": "2020-11-11T12:07:58Z",
      "side": 1,
      "message": "same here",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc6cbd62_68508152",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/FragmentPersistenceService.java",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 6862
      },
      "writtenOn": "2020-11-11T12:27:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43d95749_50a0b918",
      "revId": "67c76aa5efe220b1fabe622b0c1c7a75fec07eb8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}