{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "99c75a66_550ecac2",
        "filename": "integration-test/pom.xml",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-02-02T15:36:46Z",
      "side": 1,
      "message": "NB: want to keep the min and max limit the same?? just to keep the tests deterministic or some other reason ??",
      "range": {
        "startLine": 99,
        "startChar": 29,
        "endLine": 99,
        "endChar": 46
      },
      "revId": "7a35d9243774715c93b7d7dc53ff80333b3855f6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2957f8ea_ccc4b61b",
        "filename": "integration-test/pom.xml",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-02-02T15:51:13Z",
      "side": 1,
      "message": "Yes, it\u0027s intentional. Having min \u003d max is better for performance tests, because ResourceMeter class calls System.gc() before every test. Using same min and max avoids delays caused by needing to resize the heap after System.gc",
      "parentUuid": "99c75a66_550ecac2",
      "range": {
        "startLine": 99,
        "startChar": 29,
        "endLine": 99,
        "endChar": 46
      },
      "revId": "7a35d9243774715c93b7d7dc53ff80333b3855f6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c480fd28_91cf69cd",
        "filename": "integration-test/pom.xml",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-02-06T10:49:48Z",
      "side": 1,
      "message": "sure. makes sense to me.",
      "parentUuid": "2957f8ea_ccc4b61b",
      "range": {
        "startLine": 99,
        "startChar": 29,
        "endLine": 99,
        "endChar": 46
      },
      "revId": "7a35d9243774715c93b7d7dc53ff80333b3855f6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a4ee1e32_cd64a610",
        "filename": "integration-test/pom.xml",
        "patchSetId": 3
      },
      "lineNbr": 99,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-02-06T10:50:58Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "c480fd28_91cf69cd",
      "range": {
        "startLine": 99,
        "startChar": 29,
        "endLine": 99,
        "endChar": 46
      },
      "revId": "7a35d9243774715c93b7d7dc53ff80333b3855f6",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7a35d9243774715c93b7d7dc53ff80333b3855f6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "7a35d9243774715c93b7d7dc53ff80333b3855f6",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}