{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c6b78058_2ef75792",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-08-30T11:56:37Z",
      "side": 1,
      "message": "recheck",
      "revId": "45308e0a3309c48511a9e2d44798fddabdb16096",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "03092e29_762ab3a7",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/inventory/NetworkCmProxyInventoryFacade.java",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-08-30T12:43:56Z",
      "side": 1,
      "message": "Nb. Similar to other cases, this sends out an extra DB call compared to before.\nMoving forward, for optimization, we should probably pass the cmHandleReference into inventoryPersistence.getYangModelCmHandle, and have it retry with the alternate Id (or use a single cps path query using OR)",
      "range": {
        "startLine": 199,
        "startChar": 92,
        "endLine": 200,
        "endChar": 86
      },
      "revId": "45308e0a3309c48511a9e2d44798fddabdb16096",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b137cb7_32314c9c",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/inventory/NetworkCmProxyInventoryFacade.java",
        "patchSetId": 2
      },
      "lineNbr": 200,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-08-30T13:10:46Z",
      "side": 1,
      "message": "correct. we will handle this solution in one go when we have all the APIs have alternateId.",
      "parentUuid": "03092e29_762ab3a7",
      "range": {
        "startLine": 199,
        "startChar": 92,
        "endLine": 200,
        "endChar": 86
      },
      "revId": "45308e0a3309c48511a9e2d44798fddabdb16096",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "45308e0a3309c48511a9e2d44798fddabdb16096",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "45308e0a3309c48511a9e2d44798fddabdb16096",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}