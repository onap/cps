{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e8606d8f_577b0007",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-12-08T11:22:19Z",
      "side": 1,
      "message": "recheck",
      "revId": "195df8d43a4b7adebe6f5fcccf9c805557a51900",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "166aa107_f4cf0b51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-12-08T11:46:39Z",
      "side": 1,
      "message": "recheck",
      "revId": "195df8d43a4b7adebe6f5fcccf9c805557a51900",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59107bc1_ac1c8059",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-12-11T18:12:13Z",
      "side": 1,
      "message": "As agreed. Update this to refer to a new jira for \u0027Deployment Alignment\u0027",
      "revId": "195df8d43a4b7adebe6f5fcccf9c805557a51900",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6682562f_8adbe2c1",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/impl/config/NcmpConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-12-08T14:31:09Z",
      "side": 1,
      "message": "This should use @Value so it can be overridden in application.yaml",
      "range": {
        "startLine": 52,
        "startChar": 51,
        "endLine": 52,
        "endChar": 53
      },
      "revId": "195df8d43a4b7adebe6f5fcccf9c805557a51900",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8caaa78_752f422c",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/impl/config/NcmpConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-12-08T14:31:09Z",
      "side": 1,
      "message": "We may want to use different restTemplates for NCMP passthrough operations and DMI liveness checks. If the connection pool is full with long-running DMI operations, the liveness check may incorrectly time out. \nWe may also want different connection/read timeouts for liveness checks vs passthrough operations",
      "range": {
        "startLine": 76,
        "startChar": 31,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "195df8d43a4b7adebe6f5fcccf9c805557a51900",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d55d4e74_e5c7c579",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/impl/config/NcmpConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 6639
      },
      "writtenOn": "2023-12-11T18:13:43Z",
      "side": 1,
      "message": "is taht easy to do ?!",
      "parentUuid": "f8caaa78_752f422c",
      "range": {
        "startLine": 76,
        "startChar": 31,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "195df8d43a4b7adebe6f5fcccf9c805557a51900",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcc682ef_a9c14193",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/api/impl/config/NcmpConfiguration.java",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 6742
      },
      "writtenOn": "2023-12-12T13:35:20Z",
      "side": 1,
      "message": "Yes. Basically we define two RestTemplate @Beans here (or in separate @Configuration classes):\n\n    public RestTemplate restTemplate() { ... }\n    public RestTemplate dmiHealthRestTemplate() { ... }\n  \nand use @Qualifier to select which RestTemplate from other classes:\n\n    @Qualifier(\"dmiHealthRestTemplate\")\n    private RestTemplate dmiHealthRestTemplate;\n\nAnother reason for wanting this is to have different connection timeouts. For DMI liveness, we check DMI /actuator/health every 30 seconds by default, but our connection timeout here is set to 3 minutes - the timeout should be only 30 seconds or less.",
      "parentUuid": "d55d4e74_e5c7c579",
      "range": {
        "startLine": 76,
        "startChar": 31,
        "endLine": 76,
        "endChar": 43
      },
      "revId": "195df8d43a4b7adebe6f5fcccf9c805557a51900",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "195df8d43a4b7adebe6f5fcccf9c805557a51900",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MIN"],"failingAtoms":["label:Verified=MAX,count>=2"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "195df8d43a4b7adebe6f5fcccf9c805557a51900",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}