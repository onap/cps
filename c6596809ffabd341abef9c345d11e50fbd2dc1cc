{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3b3a3bdc_4bdbc613",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-07-08T09:59:16Z",
      "side": 1,
      "message": "looks good to me.",
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3e529e7_d684b6e1",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T09:35:43Z",
      "side": 1,
      "message": "* - /dmi/v1/ch/{cmHandleId}/data/ds/{dataStoreName}: pass-through data operation for a CM-handle\n * - /dmi/v1/data: legacy pass-through batch data operation",
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "05a89b98_d7dfc6ff",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T09:35:43Z",
      "side": 1,
      "message": "NB: All the request oath can be used as :\n\nstatic final String HEALTH_CHECK_PATH \u003d \u0027/actuator/health\u0027\nstatic final String MODULES_PATH_REGEX \u003d \u0027^/dmi/v1/ch/(.*)/modules$\u0027\nstatic final String MODULE_RESOURCES_PATH_REGEX \u003d \u0027^/dmi/v1/ch/(.*)/moduleResources$\u0027\nstatic final String DATA_PATH_REGEX \u003d \u0027^/dmi/v1/ch/(.*)/data/ds/(.*)$\u0027\nstatic final String LEGACY_DATA_PATH \u003d \u0027^/dmi/v1/data$\u0027",
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1254a9cc_22cad7f4",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-07-08T10:22:56Z",
      "side": 1,
      "message": "NB: since the highg frequency of the Health Check api we need to extract HC url from swich-case block, right?",
      "range": {
        "startLine": 64,
        "startChar": 1,
        "endLine": 66,
        "endChar": 9
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4d81e73_b05f67ff",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 66,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-07-09T09:15:36Z",
      "side": 1,
      "message": "Yes. We don\u0027t know exactly when health check will be called because trust level watchdog is a background task. So putting it in the switch below would cause intermittent failures in the tests for authorization header (this caused previous bug CPS-2167).",
      "parentUuid": "1254a9cc_22cad7f4",
      "range": {
        "startLine": 64,
        "startChar": 1,
        "endLine": 66,
        "endChar": 9
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b0ed537_ad90fda6",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 72,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T09:35:43Z",
      "side": 1,
      "message": "private String getCmHandleId(String path, String regex) {\n        Matcher matcher \u003d path \u003d~ regex\n        return matcher ? matcher[0][1] : \u0027\u0027\n    }",
      "range": {
        "startLine": 72,
        "startChar": 16,
        "endLine": 72,
        "endChar": 58
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b2352dfc_ec3fc0b9",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T09:35:43Z",
      "side": 1,
      "message": "getCmHandleId(request.path, MODULES_PATH_REGEX))",
      "range": {
        "startLine": 73,
        "startChar": 51,
        "endLine": 73,
        "endChar": 62
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf60397d_2b825bfa",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T09:35:43Z",
      "side": 1,
      "message": "Not needed as  getCmHandleId methos is used",
      "range": {
        "startLine": 77,
        "startChar": 16,
        "endLine": 77,
        "endChar": 58
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1707d9aa_7c01690d",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 78,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T09:35:43Z",
      "side": 1,
      "message": "getCmHandleId(request.path, MODULES_PATH_REGEX))",
      "range": {
        "startLine": 78,
        "startChar": 50,
        "endLine": 78,
        "endChar": 61
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6967e4e1_b20149cc",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-07-08T10:22:56Z",
      "side": 1,
      "message": "NB: Do you think is it needed to write some comment around URL regexp to specify exactly which URL would be intercepted?",
      "range": {
        "startLine": 81,
        "startChar": 20,
        "endLine": 81,
        "endChar": 49
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4dc62d6c_cb2bf639",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-07-08T15:57:03Z",
      "side": 1,
      "message": "using named constants for each regex might be usefull",
      "parentUuid": "6967e4e1_b20149cc",
      "range": {
        "startLine": 81,
        "startChar": 20,
        "endLine": 81,
        "endChar": 49
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15121b30_0955ee5b",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-07-09T09:15:36Z",
      "side": 1,
      "message": "Ack. Will look at this in next commit",
      "parentUuid": "4dc62d6c_cb2bf639",
      "range": {
        "startLine": 81,
        "startChar": 20,
        "endLine": 81,
        "endChar": 49
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9bb8be4_cdb0acdc",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-07-08T10:22:56Z",
      "side": 1,
      "message": "NB: According to open API spec it returns 200 - OK not accepted.",
      "range": {
        "startLine": 86,
        "startChar": 55,
        "endLine": 86,
        "endChar": 63
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "527406ff_b2228872",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-07-09T08:40:18Z",
      "side": 1,
      "message": "No. I just double-checked OpenAPI for DMI plugin. /v1/data returns 202 accepted",
      "parentUuid": "f9bb8be4_cdb0acdc",
      "range": {
        "startLine": 86,
        "startChar": 55,
        "endLine": 86,
        "endChar": 63
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e4b210f_2b6414d2",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-07-09T09:15:36Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "527406ff_b2228872",
      "range": {
        "startLine": 86,
        "startChar": 55,
        "endLine": 86,
        "endChar": 63
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9db094c2_1229a10d",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T09:35:43Z",
      "side": 1,
      "message": "NB: Can be merged using || operator like below:\nstatic final String DATA_PATH_REGEX \u003d \u0027^/dmi/v1/ch/(.*)/data/ds/(.*)$\u0027\nstatic final String LEGACY_DATA_PATH \u003d \u0027^/dmi/v1/data$\u0027\n\n if (request.path.matches(DATA_PATH_REGEX) || request.path.matches(LEGACY_DATA_PATH)) {\n            return mockResponseWithBody(HttpStatus.OK, \u0027{}\u0027)\n        }",
      "range": {
        "startLine": 80,
        "startChar": 8,
        "endLine": 86,
        "endChar": 70
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e033cef8_6f81008d",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 89,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T09:35:43Z",
      "side": 1,
      "message": "\"Mock DMI does not implement endpoint: ${request.path}\"",
      "range": {
        "startLine": 89,
        "startChar": 51,
        "endLine": 89,
        "endChar": 105
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0bb09ed_ce6c1297",
        "filename": "integration-test/src/test/groovy/org/onap/cps/integration/base/DmiDispatcher.groovy",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-07-09T09:35:43Z",
      "side": 1,
      "message": "\"Mock DMI has no modules configured for CM handle: ${cmHandleId}\"",
      "range": {
        "startLine": 109,
        "startChar": 47,
        "endLine": 109,
        "endChar": 101
      },
      "revId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "c6596809ffabd341abef9c345d11e50fbd2dc1cc",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}