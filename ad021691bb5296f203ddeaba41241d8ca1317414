{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1070b2f1_452527d1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-09-24T13:15:11Z",
      "side": 1,
      "message": "recheck",
      "revId": "ad021691bb5296f203ddeaba41241d8ca1317414",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1988905f_c1e135d8",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/QueryRestController.java",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-09-24T10:07:41Z",
      "side": 1,
      "message": "This code needs to be revisited in future. This \u0027prefix \u003d\u003d null\u0027 means the same prefix is applied to all anchors, which may be incorrect when querying across anchors (different anchors -\u003e different modules -\u003e possibly different prefix).\nIn the other cases like GET api, which operates on a single anchor, we should use this trick, but instead we check prefix for every node.\nBasically, the logic is incorrect in both cases.",
      "revId": "ad021691bb5296f203ddeaba41241d8ca1317414",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4147aa72_c7f5e5a6",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/QueryRestController.java",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-24T15:50:46Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1988905f_c1e135d8",
      "revId": "ad021691bb5296f203ddeaba41241d8ca1317414",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad021691bb5296f203ddeaba41241d8ca1317414",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "ad021691bb5296f203ddeaba41241d8ca1317414",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}