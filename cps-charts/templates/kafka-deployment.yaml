apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cps-and-ncmp.fullname" . }}-kafka
  labels:
    app: {{ include "cps-and-ncmp.name" . }}
    component: kafka
spec:
  replicas: {{ .Values.kafka.replicaCount }}
  selector:
    matchLabels:
      app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
        - name: kafka
          image: "{{ .Values.kafka.image.repository }}:{{ .Values.kafka.image.tag }}"
          imagePullPolicy: {{ .Values.kafka.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.kafka.service.ports.internal }}
              name: internal
            - containerPort: {{ .Values.kafka.service.ports.external }}
              name: external
          env:
            - name: KAFKA_BROKER_ID
              value: "{{ .Values.kafka.brokerId }}"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "{{ .Values.kafka.zookeeperConnect }}:2181"
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: "{{ .Values.kafka.listenerSecurityProtocolMap }}"
            - name: KAFKA_LISTENERS
              value: "{{ .Values.kafka.listeners }}"
            - name: KAFKA_ADVERTISED_LISTENERS
              value: "{{ .Values.kafka.advertisedListeners }}"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: "{{ .Values.kafka.interBrokerListenerName }}"
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "{{ .Values.kafka.offsetsTopicReplicationFactor }}"
          resources:
            limits:
              cpu: "{{ .Values.kafka.resources.limits.cpu }}"
              memory: "{{ .Values.kafka.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.kafka.resources.requests.cpu }}"
              memory: "{{ .Values.kafka.resources.requests.memory }}"
          readinessProbe:
            exec:
              command:
                - kafka-topics
                - --bootstrap-server
                - localhost:{{ .Values.kafka.service.ports.internal }}
                - --list
            initialDelaySeconds: {{ .Values.kafka.healthcheck.startPeriod | default 30 }}
            periodSeconds: {{ .Values.kafka.healthcheck.interval | default 10 }}
            timeoutSeconds: {{ .Values.kafka.healthcheck.timeout | default 10 }}
            failureThreshold: {{ .Values.kafka.healthcheck.retries | default 3 }}
