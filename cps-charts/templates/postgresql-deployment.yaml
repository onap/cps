apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cps-and-ncmp.fullname" . }}-postgresql
  labels:
    app: {{ include "cps-and-ncmp.name" . }}
    component: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "cps-and-ncmp.name" . }}
      component: postgresql
  template:
    metadata:
      labels:
        app: {{ include "cps-and-ncmp.name" . }}
        component: postgresql
    spec:
      containers:
        - name: postgresql
          image: "{{ .Values.postgresql.image }}"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "{{ .Values.postgresql.env.POSTGRES_DB }}"
            - name: POSTGRES_USER
              value: "{{ .Values.postgresql.env.POSTGRES_USER }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgresql.env.POSTGRES_PASSWORD }}"
          volumeMounts:
            - name: init-sql
              mountPath: {{ .Values.postgresql.initSql.mountPath }}
          resources:
            requests:
              cpu: {{ .Values.postgresql.resources.requests.cpu }}
              memory: {{ .Values.postgresql.resources.requests.memory }}
            limits:
              cpu: {{ .Values.postgresql.resources.limits.cpu }}
              memory: {{ .Values.postgresql.resources.limits.memory }}
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U {{ .Values.postgresql.env.POSTGRES_USER }} -d {{ .Values.postgresql.env.POSTGRES_DB }}
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
      volumes:
        - name: init-sql
          configMap:
            name: {{ .Values.postgresql.initSql.configMapName }}
