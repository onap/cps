apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "cps-and-ncmp.fullname" . }}-cps
  labels:
    app: {{ include "cps-and-ncmp.name" . }}
    component: cps-and-ncmp
spec:
  replicas: {{ .Values.cps.replicas }}
  selector:
    matchLabels:
      app: {{ include "cps-and-ncmp.name" . }}
      component: cps
  template:
    metadata:
      labels:
        app: {{ include "cps-and-ncmp.name" . }}
        component: cps
    spec:
      serviceAccountName: cps-hazelcast-service-account
      containers:
        - name: cps
          image: "{{ .Values.cps.image.repository }}:{{ .Values.cps.image.tag }}"
          imagePullPolicy: {{ .Values.cps.image.pullPolicy }}
          ports:
            - containerPort: 8080
            - containerPort: 5701
          env:
            {{- range $envName, $envValue := .Values.cps.env }}
            - name: {{ $envName | upper }}
              value: "{{ $envValue }}"
            {{- end }}
            - name: CPS_NCMP_SERVICE_NAME
              value: {{ include "cps-and-ncmp.name" . }}-cps-hazelcast
          resources:
            limits:
              cpu: {{ .Values.cps.resources.limits.cpu }}
              memory: {{ .Values.cps.resources.limits.memory }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 5
