{
  "comments": [
    {
      "key": {
        "uuid": "7b313f84_16411ba1",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-02-17T09:21:30Z",
      "side": 1,
      "message": "i think this can go on 1 line",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 110,
        "endChar": 50
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "889d6c14_7f7e8b78",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 110,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-02-17T10:38:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7b313f84_16411ba1",
      "range": {
        "startLine": 108,
        "startChar": 39,
        "endLine": 110,
        "endChar": 50
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8588800d_dba676a3",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-02-16T11:17:56Z",
      "side": 1,
      "message": "I am aware that this is WiP but just to let you know that we handle all exception mapping (tests) in CpsRestExceptionHandler(Spec)",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 200,
        "endChar": 5
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8d6b0cd_27c1004e",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-02-17T08:16:19Z",
      "side": 1,
      "message": "this is a test for error responses for a particular endpoint invocation.\nagain: it\u0027s not a code coverage, it\u0027s a case coverage.",
      "parentUuid": "8588800d_dba676a3",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 200,
        "endChar": 5
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8465350a_7933f840",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-02-17T09:21:30Z",
      "side": 1,
      "message": "but this approach is inconsistent with the way we tested/described error handling.\n\nTo me it is simply tested/described in the wrong place. The error RestExceptionHandler as the name suggest is still the right place to handle these scenarios, if not you wil end up with a lot of unnecessary (more or less duplicated) test in the rest controllers!",
      "parentUuid": "c8d6b0cd_27c1004e",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 200,
        "endChar": 5
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bf993e1_62c4a184",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-02-17T10:38:47Z",
      "side": 1,
      "message": "i disagree. testing a code, not the cases will eventually cause a bug\nand we already faced a couple just because there were \u0027only necessary\u0027 tests.\n\nthese tests are covering the error cases for specific endpoint,\nthey prevent the quiet (unnoticed) behavior change for exposed API\ncaused by implementation updates.",
      "parentUuid": "8465350a_7933f840",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 200,
        "endChar": 5
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bcfd030_c313f3f9",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-02-17T12:50:38Z",
      "side": 1,
      "message": "is there any scenario where endpoint wont use RestExceptionHandler  for handle Exception and provide the correct Error Response?\nif yes, this is correct\nif not, this needs to be handled by RestExceptionHandler tests",
      "parentUuid": "5bf993e1_62c4a184",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 200,
        "endChar": 5
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4432dbfc_a58a406a",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-02-17T13:23:02Z",
      "side": 1,
      "message": "removed",
      "parentUuid": "2bcfd030_c313f3f9",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 200,
        "endChar": 5
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75796035_2a978187",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-02-17T13:30:15Z",
      "side": 1,
      "message": "are those scenarios covered already on RestExceptionHandler?",
      "parentUuid": "4432dbfc_a58a406a",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 200,
        "endChar": 5
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c095cb13_0d3f7457",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 200,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-02-17T13:41:46Z",
      "side": 1,
      "message": "same scenarios - no, same code - yes",
      "parentUuid": "75796035_2a978187",
      "range": {
        "startLine": 184,
        "startChar": 0,
        "endLine": 200,
        "endChar": 5
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3939d794_cf74411f",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 99,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-02-17T09:21:30Z",
      "side": 1,
      "message": "insert the (main) parameter(s) e.g and xpath is #parentNodePath and option #updateDescendantsOption",
      "range": {
        "startLine": 99,
        "startChar": 64,
        "endLine": 99,
        "endChar": 81
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b68b4883_8fd00784",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy",
        "patchSetId": 6
      },
      "lineNbr": 99,
      "author": {
        "id": 7362
      },
      "writtenOn": "2021-02-17T10:38:47Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3939d794_cf74411f",
      "range": {
        "startLine": 99,
        "startChar": 64,
        "endLine": 99,
        "endChar": 81
      },
      "revId": "9dd02c89cd21d00c12bf661eaa1f1bc78731e5e2",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}