{
  "comments": [
    {
      "key": {
        "uuid": "4532e65f_6d5ea60b",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/CpsRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 7362
      },
      "writtenOn": "2020-12-09T08:24:42Z",
      "side": 1,
      "message": "this will result response with status 500\ninternal server error",
      "range": {
        "startLine": 177,
        "startChar": 22,
        "endLine": 177,
        "endChar": 34
      },
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f83c9f5_d7ed262a",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/CpsRestController.java",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-12-09T12:31:55Z",
      "side": 1,
      "message": "correct, normally a more specialized exception shoudl be used to prevent that but this is an early PoC method that will be removed shortly so it doesn\u0027t matter in this case",
      "parentUuid": "4532e65f_6d5ea60b",
      "range": {
        "startLine": 177,
        "startChar": 22,
        "endLine": 177,
        "endChar": 34
      },
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1408057_9d04e9fc",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/exceptions/CpsRestExceptionHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 7362
      },
      "writtenOn": "2020-12-09T08:24:42Z",
      "side": 1,
      "message": "it\u0027s a generic validation error handler. not just model.\n_any_ validation case resulting BAD REQUEST response",
      "range": {
        "startLine": 53,
        "startChar": 41,
        "endLine": 53,
        "endChar": 71
      },
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa1be2c4_63908681",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/exceptions/CpsRestExceptionHandler.java",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-12-09T12:31:55Z",
      "side": 1,
      "message": "not any more! The point of this commit is to update the exceptions in line with the agreed hierarchy of exceptions documented here: https://wiki.onap.org/display/DW/CPS+Exceptions+and+REST+API+HTTP+Response+Codes\n \nWe haven\u0027t yet discussed what HTTP Rest code should be returned for model and or validation scenarios, BAD REquest is my best guess for now",
      "parentUuid": "a1408057_9d04e9fc",
      "range": {
        "startLine": 53,
        "startChar": 41,
        "endLine": 53,
        "endChar": 71
      },
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07e336fc_49b9cd8f",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsAdminPersistenceServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 6679
      },
      "writtenOn": "2020-12-09T08:53:35Z",
      "side": 1,
      "message": "please keep consistency with CpsModulePersistenceServiceImpl  Line 69\nalso my opinion is to keep the exception in repository, code is cleaner in that way\nanother thing is that there is no extra value on having DataspaceNotFoundException\nwith CpsNotFoundException and correct message is more than enough. \nOr we keep consistency and line 62 needs is own exception",
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a8423be_58edc48f",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsAdminPersistenceServiceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-12-09T12:31:55Z",
      "side": 1,
      "message": "I\u0027ll revert to generation of not found exceptions in the repository\nhoever I do see value in a specific DataspaceNotFound exception as dataspace is such a core concept for CPS it is good to have a clear exception separate form more generic not found exceptions",
      "parentUuid": "07e336fc_49b9cd8f",
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b072fb06_5b1b75b3",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/exceptions/CpsExceptionBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-12-08T18:31:31Z",
      "side": 1,
      "message": "I dont see the need for a separate builder class, I\u0027d rather have good constructor (but limited) methods in the actual exception so we have consistent message and details!",
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "366f7a75_71e95cbd",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/exceptions/CpsExceptionBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7362
      },
      "writtenOn": "2020-12-09T08:24:42Z",
      "side": 1,
      "message": "The purpose of the class is clearly described:\nit\u0027s a message consistency for similar cases.\n\nIt\u0027s a bad idea making different exception classes \nif the only purpose is encapsulation of error message.",
      "parentUuid": "b072fb06_5b1b75b3",
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "beb04fb9_bc0d31fd",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/exceptions/CpsExceptionBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6679
      },
      "writtenOn": "2020-12-09T12:14:49Z",
      "side": 1,
      "message": "I agree with Toine, there is not need for this builder class. Each exception can handle the needs on their own class definition.",
      "parentUuid": "366f7a75_71e95cbd",
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "17cc5523_f6d7a124",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/exceptions/CpsExceptionBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-12-09T12:31:55Z",
      "side": 1,
      "message": "I myself had some reservations about specific exceptions too initially but it was what the team agreed! Also I now see the advantage of the Java API throwing more specific exception as Java Client can then build specific handling (this was the deciding factor for a specialized exception) without the need to examine the message or details but they can also choose to just catch a superclass instead if they don\u0027t need to, it gives them more flexibility\n\nRe the need for a builder class I am awaiting response from team members...",
      "parentUuid": "366f7a75_71e95cbd",
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c711c359_f416816f",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/exceptions/CpsExceptionBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 7362
      },
      "writtenOn": "2020-12-09T08:24:42Z",
      "side": 1,
      "message": "how schema set name conflict became model validation exception?\nit\u0027s just invalid \u0027name\u0027 parameter case\nwhy CpsValidationException was removed?",
      "range": {
        "startLine": 38,
        "startChar": 18,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f91a716f_a2e33e03",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/exceptions/CpsExceptionBuilder.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 6639
      },
      "writtenOn": "2020-12-09T12:31:55Z",
      "side": 1,
      "message": "We had an unnecessary extra level in the exception hierarchy so I removed one level I can rename CpsException back to CpsValdiationException but i didn\u0027t think the term validation always applied although it depends on your interpretation of that term which is probably different for different users...\n\nI see now we had agreed on SchemaSetAlreadyDefinedException as documented here: \n and it makes sense to have a separate exception for this a there might be good reason to just ignore this/just log a warning depending on the (clients) use case",
      "parentUuid": "c711c359_f416816f",
      "range": {
        "startLine": 38,
        "startChar": 18,
        "endLine": 38,
        "endChar": 70
      },
      "revId": "afe727ffcb8bc10ed34aa9c616f40c30ce182bd9",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}