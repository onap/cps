{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1dfb39b8_edb71eeb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-11-04T16:12:54Z",
      "side": 1,
      "message": "fine for me.",
      "revId": "4b93bb71bed24b4b6c06bdd1d1ceb13f8580eb10",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "548b38c7_27c11d76",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-11-04T17:16:02Z",
      "side": 1,
      "message": "NB: You can simplify the method performModuleSync by extracting some part of it into a private method like below:\n\npublic CompletableFuture\u003cVoid\u003e performModuleSync(final Collection\u003cDataNode\u003e cmHandlesAsDataNodes, final AtomicInteger batchCounter) {\n        final Map\u003cYangModelCmHandle, CmHandleState\u003e cmHandleStatePerCmHandle \u003d\n            new HashMap\u003c\u003e(cmHandlesAsDataNodes.size());\n        try {\n            cmHandlesAsDataNodes.forEach(cmHandleAsDataNode -\u003e {\n                final YangModelCmHandle yangModelCmHandle \u003d YangDataConverter.toYangModelCmHandle(cmHandleAsDataNode);\n                final CompositeState compositeState \u003d inventoryPersistence.getCmHandleState(yangModelCmHandle.getId());\n                final boolean inUpgrade \u003d ModuleOperationsUtils.inUpgradeOrUpgradeFailed(compositeState);\n                processCmHandle(yangModelCmHandle, compositeState, inUpgrade, cmHandleStatePerCmHandle);\n            });\n        } finally {\n            batchCounter.getAndDecrement();\n            lcmEventsCmHandleStateHandler.updateCmHandleStateBatch(cmHandleStatePerCmHandle);\n            log.info(\"Processing module sync batch finished. {} batch(es) active.\", batchCounter.get());\n        }\n        return CompletableFuture.completedFuture(null);\n    }\n    \nprivate void processCmHandle(final YangModelCmHandle yangModelCmHandle,\n                                 final CompositeState compositeState,\n                                 final boolean inUpgrade,\n                                 final Map\u003cYangModelCmHandle, CmHandleState\u003e cmHandleStatePerCmHandle) {\n        try {\n            if (inUpgrade) {\n                moduleSyncService.syncAndUpgradeSchemaSet(yangModelCmHandle);\n            } else {\n                moduleSyncService.deleteSchemaSetIfExists(yangModelCmHandle.getId());\n                moduleSyncService.syncAndCreateSchemaSetAndAnchor(yangModelCmHandle);\n            }\n            yangModelCmHandle.getCompositeState().setLockReason(null);\n            cmHandleStatePerCmHandle.put(yangModelCmHandle, CmHandleState.READY);\n        } catch (final Exception e) {\n            log.warn(\"Processing of {} module failed due to reason {}.\", yangModelCmHandle.getId(), e.getMessage());\n            final LockReasonCategory lockReasonCategory \u003d inUpgrade ? LockReasonCategory.MODULE_UPGRADE_FAILED\n                : LockReasonCategory.MODULE_SYNC_FAILED;\n            moduleOperationsUtils.updateLockReasonWithAttempts(compositeState,\n                lockReasonCategory, e.getMessage());\n            setCmHandleStateLocked(yangModelCmHandle, compositeState.getLockReason());\n            cmHandleStatePerCmHandle.put(yangModelCmHandle, CmHandleState.LOCKED);\n        }\n    }",
      "revId": "4b93bb71bed24b4b6c06bdd1d1ceb13f8580eb10",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "40cab8e8_6031e4a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-11-04T17:17:11Z",
      "side": 1,
      "message": "Sorry it was a bit longer for Gerrit and un-indented but still is the only way to review it.",
      "revId": "4b93bb71bed24b4b6c06bdd1d1ceb13f8580eb10",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1614c009_12dbf6b1",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/sync/ModuleSyncTasks.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-11-04T14:52:29Z",
      "side": 1,
      "message": "do u think we should flip #89 and 90 ??\nfirst let it update and then only mark the batch as done.",
      "revId": "4b93bb71bed24b4b6c06bdd1d1ceb13f8580eb10",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "728dc4ae_a96fd3f3",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/sync/ModuleSyncTasks.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-11-04T15:45:26Z",
      "side": 1,
      "message": "No. If an exception occurred while updating the state (e.g. DB timeout), then the counter would not decrement, meaning that worker thread would not process any more batches.",
      "parentUuid": "1614c009_12dbf6b1",
      "revId": "4b93bb71bed24b4b6c06bdd1d1ceb13f8580eb10",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "511d0125_96e2603c",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/sync/ModuleSyncTasks.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-11-04T15:51:34Z",
      "side": 1,
      "message": "FYI, the batchCounter is used for controlling the multi-threaded workers. I will be posting another patch that gets rid of the counter using Semaphore instead.",
      "parentUuid": "728dc4ae_a96fd3f3",
      "revId": "4b93bb71bed24b4b6c06bdd1d1ceb13f8580eb10",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f04e5f81_85589a90",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/sync/ModuleSyncTasks.java",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-11-04T16:12:54Z",
      "side": 1,
      "message": "alright if we are getting rid of this then lets see in the other patch.thnx.",
      "parentUuid": "511d0125_96e2603c",
      "revId": "4b93bb71bed24b4b6c06bdd1d1ceb13f8580eb10",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}