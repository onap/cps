{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "e2254323_b860ad29",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-11-05T08:34:53Z",
      "side": 1,
      "message": "just one question but it is not blocking",
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06f9acd6_bd9f61ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-11-06T16:44:04Z",
      "side": 1,
      "message": "To be honest I got lost a bit while reviewing. Since the related wiki page have Performance - Outstanding mentioned Consuming 250K messsages with 5 partition but I haven\u0027t seen neither the produce-avc-event.js creating 5 partitons ( I checked it on our kafka-ui by monitoring profile- there was only default partition that is 0) nor CmAvcEventConsumer has been modified to consume messages from 5 different partitions. I think, I need a bit clarification to understand the intention on this commit for myself.",
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45d57c86_4cd00197",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-11-06T16:55:51Z",
      "side": 1,
      "message": "these are just once-off-test and in order to have a more accurate result I did the testing in my local using 250K messages.\nNot everybody has to do with 250K messages , 100k is enough. Just to get more sample data it was done like that.\n\nThe test is not supposed to create 5 partitions. Its just local testing data just to get some figures and prove that it has no impact on the performance.\nMoreover its just testing kafka capabilities.\n\nMain thing we are doing in the production code is just reusing the key from source topic and populating to the target topic while consuming the messages.\n\nAnyways I can demo the ordering bit to the team once this is merged.",
      "parentUuid": "06f9acd6_bd9f61ad",
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "586caf9a_db8e50f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-11-06T17:08:39Z",
      "side": 1,
      "message": "what I understood the current CmAvcEventConsumer can consume from multiple partitions of dmi-cm-events (e.g if it configured with 5 partitions). We dont have to change any consumer config e.g. group in our application, right?",
      "parentUuid": "45d57c86_4cd00197",
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "73a528a8_e20b4d26",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-11-06T17:21:40Z",
      "side": 1,
      "message": "yes thats correct.\nwe just consume from one topic and forward to another.\neg : we could be reading from a source topic ( with 3 partitions ) and forwarding to target topic ( with 5 partitions )\n\nits just that we are retaining the same key during reading from source key and while forwarding to target key is to preserve the order. Messages are guaranteed to be ordered in a particular partition.",
      "parentUuid": "586caf9a_db8e50f2",
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42b671bb_79009ccd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-11-06T17:23:48Z",
      "side": 1,
      "message": "Some NB comments, thanks for clarifications.",
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e64b2aac_8747d989",
        "filename": "k6-tests/once-off-test/kafka/produce-avc-event.js",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-11-06T17:22:55Z",
      "side": 1,
      "message": "NB: sendKafkaMessage same as below",
      "range": {
        "startLine": 45,
        "startChar": 19,
        "endLine": 45,
        "endChar": 36
      },
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4a91470_06a9a712",
        "filename": "k6-tests/once-off-test/kafka/produce-avc-event.js",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-11-05T08:34:53Z",
      "side": 1,
      "message": "always worry a bit about random. It means the same key could be used multipel times... Could that cause an issue with the test?!\nWhy dont you just use sequential? Maybe you cant because you need to send many more events then available elements....",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 30
      },
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ab8ac16_780152c5",
        "filename": "k6-tests/once-off-test/kafka/produce-avc-event.js",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-11-06T10:38:37Z",
      "side": 1,
      "message": "I was thinking more like a realistic test here , thats why I did my testing with a limited network size ( with 10 n/w element ) and yes the duplicate key is intended. The reason being with mutiple kafka partition , when the events would be sent. So all the messages belonging to a n/w element should fall in the same partition everytime ( which kafka will guarantee as we are making n/w element id as the key ). So when the messages are consumed in parallel there would be no out of order elements with respect to the n/w element.",
      "parentUuid": "a4a91470_06a9a712",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 30
      },
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c8286611_e515ee65",
        "filename": "k6-tests/once-off-test/kafka/produce-avc-event.js",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-11-06T11:27:19Z",
      "side": 1,
      "message": "This could be a plain function instead of lambda",
      "parentUuid": "1ab8ac16_780152c5",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 30
      },
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "50b8bbe5_6ef99308",
        "filename": "k6-tests/once-off-test/kafka/produce-avc-event.js",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-11-06T17:22:55Z",
      "side": 1,
      "message": "So 10 unique event keys means 10 partitions in dmi-cm-events topit, right?",
      "parentUuid": "c8286611_e515ee65",
      "range": {
        "startLine": 53,
        "startChar": 6,
        "endLine": 53,
        "endChar": 30
      },
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23806d42_59e5010c",
        "filename": "k6-tests/once-off-test/kafka/produce-avc-event.js",
        "patchSetId": 1
      },
      "lineNbr": 71,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-11-06T17:22:55Z",
      "side": 1,
      "message": "NB: sendKafkaMessage since it sends only a message at at time.",
      "range": {
        "startLine": 71,
        "startChar": 16,
        "endLine": 71,
        "endChar": 33
      },
      "revId": "2dd658268202f92e0b5621093747f13670e5d042",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}