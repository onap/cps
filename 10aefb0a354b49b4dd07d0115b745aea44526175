{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "59ff2f2c_b9b8ca9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-17T07:54:56Z",
      "side": 1,
      "message": "Resolved comments",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80164fb8_2c865795",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7931
      },
      "writtenOn": "2024-09-20T09:29:14Z",
      "side": 1,
      "message": "question: why is it called \u0027dry run\u0027 ?",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19e189bb_259f4618",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-23T06:02:04Z",
      "side": 1,
      "message": "dry-run is usually a way to validate a request without performing the intended operation of the API. Here we are validating the data without persisting it to the database.\ni found this article, a nice short explaination: https://dx.apiture.com/docs/api/concepts/dry-runs/",
      "parentUuid": "80164fb8_2c865795",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2466f2a4_d9a27fea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-09-23T10:01:59Z",
      "side": 1,
      "message": "fine by me. can be merged.\nApologies for the delay.",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15e01ebb_e8268938",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-23T12:57:38Z",
      "side": 1,
      "message": "Resolved comments. Need clarification for https://gerrit.onap.org/r/c/cps/+/138676/comment/3ec1b344_06c9a33f/ and that would help resolve other unresolved comments",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a28969f_73b72cdc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-24T11:58:12Z",
      "side": 1,
      "message": "closing as no further queries are there",
      "parentUuid": "19e189bb_259f4618",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ca54b04_0936997a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7931
      },
      "writtenOn": "2024-09-27T12:22:21Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19e189bb_259f4618",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5737014_690b8cb8",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/DataRestController.java",
        "patchSetId": 19
      },
      "lineNbr": 78,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "not sure, was this discussed (in teh study) is theer a way indicating to the user it was a dry run? Mayb gice a 200 repsonse with a message instead?",
      "range": {
        "startLine": 78,
        "startChar": 19,
        "endLine": 78,
        "endChar": 47
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f191c7a2_638bda20",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/DataRestController.java",
        "patchSetId": 19
      },
      "lineNbr": 78,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-23T12:57:38Z",
      "side": 1,
      "message": "This question was not brought up by anyone in the discussions. But from my study what I found is the most common scenario in dry-run application is to return either a 200 or 204 response code with no content. And I kept the same in my proposal document.\nAny inputs are appreciated.",
      "parentUuid": "e5737014_690b8cb8",
      "range": {
        "startLine": 78,
        "startChar": 19,
        "endLine": 78,
        "endChar": 47
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "897ec46b_59112b93",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/DataRestController.java",
        "patchSetId": 19
      },
      "lineNbr": 78,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-24T16:17:49Z",
      "side": 1,
      "message": "I woudl like to see a differnce so maybe a 204 is a good idea. Lets make suer we dsicuss this soon with Priyank etc. But it does not block this commit.",
      "parentUuid": "f191c7a2_638bda20",
      "range": {
        "startLine": 78,
        "startChar": 19,
        "endLine": 78,
        "endChar": 47
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "15b9666d_ad7b985d",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/DataRestController.java",
        "patchSetId": 19
      },
      "lineNbr": 78,
      "author": {
        "id": 7931
      },
      "writtenOn": "2024-09-27T12:22:21Z",
      "side": 1,
      "message": "maybe for now have a log or some message? that says there was no process done etc etc",
      "parentUuid": "f191c7a2_638bda20",
      "range": {
        "startLine": 78,
        "startChar": 19,
        "endLine": 78,
        "endChar": 47
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85ad2002_5a9bfc79",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 184,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "no need to test dryrun with 2 (format) scenarios",
      "range": {
        "startLine": 181,
        "startChar": 0,
        "endLine": 184,
        "endChar": 86
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7e50ad7_44d230f3",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 184,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-23T12:57:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85ad2002_5a9bfc79",
      "range": {
        "startLine": 181,
        "startChar": 0,
        "endLine": 184,
        "endChar": 86
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "549781f4_916f2a09",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsDataServiceImpl.java",
        "patchSetId": 19
      },
      "lineNbr": 366,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "NB: \u0027ToUse\u0027 bit not really needed",
      "range": {
        "startLine": 366,
        "startChar": 21,
        "endLine": 366,
        "endChar": 32
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe713ecf_a46ccd0a",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsDataServiceImpl.java",
        "patchSetId": 19
      },
      "lineNbr": 366,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-23T12:57:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "549781f4_916f2a09",
      "range": {
        "startLine": 366,
        "startChar": 21,
        "endLine": 366,
        "endChar": 32
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffa96a8f_5fc815a7",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsDataServiceImpl.java",
        "patchSetId": 19
      },
      "lineNbr": 368,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:33:30Z",
      "side": 1,
      "message": "just use the old method (has same name anyway!)",
      "range": {
        "startLine": 368,
        "startChar": 7,
        "endLine": 368,
        "endChar": 72
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2ca5f39d_dd5db9fe",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsDataServiceImpl.java",
        "patchSetId": 19
      },
      "lineNbr": 368,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-24T11:58:12Z",
      "side": 1,
      "message": "changed it to validateData as recommended in the following comment https://gerrit.onap.org/r/c/cps/+/138676/comment/3ec1b344_06c9a33f/",
      "parentUuid": "ffa96a8f_5fc815a7",
      "range": {
        "startLine": 368,
        "startChar": 7,
        "endLine": 368,
        "endChar": 72
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "262029a9_4b49f600",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/YangParser.java",
        "patchSetId": 19
      },
      "lineNbr": 105,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "have you got unit test that cover both paths ie with and with populated cache?!\nOK I checked and it is covered :-)",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 105,
        "endChar": 90
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d47fabd5_38385c17",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/YangParserHelper.java",
        "patchSetId": 19
      },
      "lineNbr": 74,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "NB: constant does not add value and only used twice , I prefer string literals in such cases",
      "range": {
        "startLine": 74,
        "startChar": 24,
        "endLine": 74,
        "endChar": 59
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e7cf1ff_713644bf",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/YangParserHelper.java",
        "patchSetId": 19
      },
      "lineNbr": 74,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-23T12:57:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d47fabd5_38385c17",
      "range": {
        "startLine": 74,
        "startChar": 24,
        "endLine": 74,
        "endChar": 59
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ec1b344_06c9a33f",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/YangParserHelper.java",
        "patchSetId": 19
      },
      "lineNbr": 107,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "I simply think this method is not need (Its badly named anyway and parameter order is inconsistent)\n\nBut you can simply call the original parse Method above without using the return for validation from the client. \nThis also mean you need no NEW testware",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 107,
        "endChar": 58
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "847dac8f_294be4bf",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/YangParserHelper.java",
        "patchSetId": 19
      },
      "lineNbr": 107,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-23T12:57:38Z",
      "side": 1,
      "message": "yes we can use the existing method, the same question was asked by Daniel earlier(https://gerrit.onap.org/r/c/cps/+/138676/comment/c49d4cc2_777f68bf/). \nBut there is a slight difference in the parser methods of JSON and XML data.XML parsing performs an extra step as follows\n1. XML is parsed\n2. The parsed data is packaged into a container node, this step prevents the parsing and validation of leaf nodes.\nSo, if we use the existing method, the test, https://gerrit.onap.org/r/c/cps/+/138676/19/cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy#548 would lead to a failure for scenario 4: \u0027XML data with specific xpath\u0027 which is validating a leaf node under a specific xpath.\n\nIn the current implementation, the above two steps are performed /cps-service/src/main/java/org/onap/cps/utils/YangParserHelper.java#130",
      "parentUuid": "3ec1b344_06c9a33f",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 107,
        "endChar": 58
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "feba06ce_5748246e",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/YangParserHelper.java",
        "patchSetId": 19
      },
      "lineNbr": 107,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-24T08:26:41Z",
      "side": 1,
      "message": "ok, i didnt think that additional step could cause a problem. But there is a simple solution\n\nchange the original method into a private method with an extra boolean parameter: validateAndParse and use that parameter to skip the additional step\n\nthen add 2 public methods that redirect to the private method like so (pseudo code):\n\nVALIDATE_AND_PARSE \u003d false\nVALIDATE_ONLY \u003d true\n\npublic containerNode parseData(...)\n  return parseData(...., VALIDATE_AND_PARSE)\n\npublic void validateData(...)\n  parseData(...., VALIDATE_ONLY)\n  \n  \nprivate containerNode parseData(...., parseAndValdiate)\n     ...\n     if (validate_andParse) { }\n     \n     \nENSURE the parameters of all the methods are in the same order!\nTESTWARE: the existing test should automatically call the new public method and then the private method.\nyou should only add ONE simple test(oen scenario) for the validate test just to proof it redirects to the private method throws an exception with invalid data. All other scenario are covered by the existing tests.",
      "parentUuid": "847dac8f_294be4bf",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 107,
        "endChar": 58
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7dd1e4ad_d2953da7",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/YangParserHelper.java",
        "patchSetId": 19
      },
      "lineNbr": 107,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-24T11:58:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "feba06ce_5748246e",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 107,
        "endChar": 58
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9763a87d_2828c3b2",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 556,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "content type is no relevant for the method being tested (no different code paths) SO need to test with 2 different content types, just 2 scenarios for the types of parentPath are needed",
      "range": {
        "startLine": 556,
        "startChar": 76,
        "endLine": 556,
        "endChar": 87
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b3243f05_2346707a",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 556,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-24T11:58:12Z",
      "side": 1,
      "message": "this is the test that helped identify that XML parsing would fail when validating individual leaves. as mentioned in the following comment https://gerrit.onap.org/r/c/cps/+/138676/comment/3ec1b344_06c9a33f/\nSpecifically, the 4th scenario. So what should we do? keep the entire test or remove the 3rd one and keep 1st 2nd and 4th.",
      "parentUuid": "9763a87d_2828c3b2",
      "range": {
        "startLine": 556,
        "startChar": 76,
        "endLine": 556,
        "endChar": 87
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b519d4ce_21c57631",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 556,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-24T16:17:49Z",
      "side": 1,
      "message": "keep the scenario that identified the issue with XML parsing\nactually, I stil dont understand this really: if XML validation failed in that second part why are you EXCLUDING it from the validation logic?!",
      "parentUuid": "b3243f05_2346707a",
      "range": {
        "startLine": 556,
        "startChar": 76,
        "endLine": 556,
        "endChar": 87
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b16eb02e_8e4be8a2",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 556,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-25T06:24:39Z",
      "side": 1,
      "message": "the second part does not deal with validation of XML, rather one can say it handles data extraction. As I said earlier XML parsing is done in 2 steps:\n1. We parse the XML data and validate it against a Yang model(this is the only step needed for validation). Once the XML is successfully parsed the XML structure after parsing contains a top-level container node corresponding to \"root\". This root is not part of the core XML data that was provided as part of request (just in memory representation by ODL). So, we move to second step, that is to extract the first child under root using getFirstChildXmlRoot().\n2. This step involves extracting the first child under root node. The extraction is handled by getFirstChildXmlRoot() and we can see it ignores leaf nodes (as seen on line 260 !(child instanceof LeafNode)) because usually any meaningful data is under container nodes or list nodes. So if we provide just a leaf node it fails in this step.\n\nSo, if a validation request contains only leaves, then the yang parser successfully parses it because they might be a valid element in the associated Yang model. But fails in second step that is extraction of core data under the root node.",
      "parentUuid": "b519d4ce_21c57631",
      "range": {
        "startLine": 556,
        "startChar": 76,
        "endLine": 556,
        "endChar": 87
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c54a84a_2c9cd3fb",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 556,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-25T08:41:04Z",
      "side": 1,
      "message": "ok thanks for explaining so clearly",
      "parentUuid": "b16eb02e_8e4be8a2",
      "range": {
        "startLine": 556,
        "startChar": 76,
        "endLine": 556,
        "endChar": 87
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbc2cf58_16263309",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangParserHelperSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 181,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "OK, here all 4 scenarios are covering different paths, so this is good!",
      "range": {
        "startLine": 177,
        "startChar": 1,
        "endLine": 181,
        "endChar": 5
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aff860f3_98cd315a",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangParserHelperSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 183,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "was no need to duplicate the testware all scenarios are already covered but in any case as I suggested do NOT introduce a new public method.",
      "range": {
        "startLine": 183,
        "startChar": 9,
        "endLine": 183,
        "endChar": 58
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "70a86f08_ae1134a9",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangParserHelperSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 183,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-24T11:58:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aff860f3_98cd315a",
      "range": {
        "startLine": 183,
        "startChar": 9,
        "endLine": 183,
        "endChar": 58
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71c01746_222ef868",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangParserHelperSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 201,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "NB Suggestion: I probably would create separate tests for JSON and XML",
      "range": {
        "startLine": 201,
        "startChar": 3,
        "endLine": 201,
        "endChar": 61
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c22b14d7_21b74ed0",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangParserHelperSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 201,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:33:30Z",
      "side": 1,
      "message": "ignore, the test can be removed when you remove the new public method",
      "parentUuid": "71c01746_222ef868",
      "range": {
        "startLine": 201,
        "startChar": 3,
        "endLine": 201,
        "endChar": 61
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5882d1f5_34365972",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangParserHelperSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 201,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-24T11:58:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c22b14d7_21b74ed0",
      "range": {
        "startLine": 201,
        "startChar": 3,
        "endLine": 201,
        "endChar": 61
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}