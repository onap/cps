{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "59ff2f2c_b9b8ca9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-17T07:54:56Z",
      "side": 1,
      "message": "Resolved comments",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80164fb8_2c865795",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7931
      },
      "writtenOn": "2024-09-20T09:29:14Z",
      "side": 1,
      "message": "question: why is it called \u0027dry run\u0027 ?",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19e189bb_259f4618",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7846
      },
      "writtenOn": "2024-09-23T06:02:04Z",
      "side": 1,
      "message": "dry-run is usually a way to validate a request without performing the intended operation of the API. Here we are validating the data without persisting it to the database.\ni found this article, a nice short explaination: https://dx.apiture.com/docs/api/concepts/dry-runs/",
      "parentUuid": "80164fb8_2c865795",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2466f2a4_d9a27fea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 19
      },
      "lineNbr": 0,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-09-23T10:01:59Z",
      "side": 1,
      "message": "fine by me. can be merged.\nApologies for the delay.",
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5737014_690b8cb8",
        "filename": "cps-rest/src/main/java/org/onap/cps/rest/controller/DataRestController.java",
        "patchSetId": 19
      },
      "lineNbr": 78,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "not sure, was this discussed (in teh study) is theer a way indicating to the user it was a dry run? Mayb gice a 200 repsonse with a message instead?",
      "range": {
        "startLine": 78,
        "startChar": 19,
        "endLine": 78,
        "endChar": 47
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85ad2002_5a9bfc79",
        "filename": "cps-rest/src/test/groovy/org/onap/cps/rest/controller/DataRestControllerSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 184,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "no need to test dryrun with 2 (format) scenarios",
      "range": {
        "startLine": 181,
        "startChar": 0,
        "endLine": 184,
        "endChar": 86
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "549781f4_916f2a09",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsDataServiceImpl.java",
        "patchSetId": 19
      },
      "lineNbr": 366,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "NB: \u0027ToUse\u0027 bit not really needed",
      "range": {
        "startLine": 366,
        "startChar": 21,
        "endLine": 366,
        "endChar": 32
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffa96a8f_5fc815a7",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsDataServiceImpl.java",
        "patchSetId": 19
      },
      "lineNbr": 368,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:33:30Z",
      "side": 1,
      "message": "just use the old method (has same name anyway!)",
      "range": {
        "startLine": 368,
        "startChar": 7,
        "endLine": 368,
        "endChar": 72
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "262029a9_4b49f600",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/YangParser.java",
        "patchSetId": 19
      },
      "lineNbr": 105,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "have you got unit test that cover both paths ie with and with populated cache?!\nOK I checked and it is covered :-)",
      "range": {
        "startLine": 99,
        "startChar": 0,
        "endLine": 105,
        "endChar": 90
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d47fabd5_38385c17",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/YangParserHelper.java",
        "patchSetId": 19
      },
      "lineNbr": 74,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "NB: constant does not add value and only used twice , I prefer string literals in such cases",
      "range": {
        "startLine": 74,
        "startChar": 24,
        "endLine": 74,
        "endChar": 59
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ec1b344_06c9a33f",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/YangParserHelper.java",
        "patchSetId": 19
      },
      "lineNbr": 107,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "I simply think this method is not need (Its badly named anyway and parameter order is inconsistent)\n\nBut you can simply call the original parse Method above without using the return for validation from the client. \nThis also mean you need no NEW testware",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 107,
        "endChar": 58
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9763a87d_2828c3b2",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsDataServiceImplSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 556,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "content type is no relevant for the method being tested (no different code paths) SO need to test with 2 different content types, just 2 scenarios for the types of parentPath are needed",
      "range": {
        "startLine": 556,
        "startChar": 76,
        "endLine": 556,
        "endChar": 87
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cbc2cf58_16263309",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangParserHelperSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 181,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "OK, here all 4 scenarios are covering different paths, so this is good!",
      "range": {
        "startLine": 177,
        "startChar": 1,
        "endLine": 181,
        "endChar": 5
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aff860f3_98cd315a",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangParserHelperSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 183,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "was no need to duplicate the testware all scenarios are already covered but in any case as I suggested do NOT introduce a new public method.",
      "range": {
        "startLine": 183,
        "startChar": 9,
        "endLine": 183,
        "endChar": 58
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71c01746_222ef868",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangParserHelperSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 201,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:28:59Z",
      "side": 1,
      "message": "NB Suggestion: I probably would create separate tests for JSON and XML",
      "range": {
        "startLine": 201,
        "startChar": 3,
        "endLine": 201,
        "endChar": 61
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c22b14d7_21b74ed0",
        "filename": "cps-service/src/test/groovy/org/onap/cps/utils/YangParserHelperSpec.groovy",
        "patchSetId": 19
      },
      "lineNbr": 201,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-09-23T10:33:30Z",
      "side": 1,
      "message": "ignore, the test can be removed when you remove the new public method",
      "parentUuid": "71c01746_222ef868",
      "range": {
        "startLine": 201,
        "startChar": 3,
        "endLine": 201,
        "endChar": 61
      },
      "revId": "10aefb0a354b49b4dd07d0115b745aea44526175",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}