{
  "comments": [
    {
      "key": {
        "uuid": "fefec900_1dba9d84",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsAdminServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 36,
      "author": {
        "id": 7957
      },
      "writtenOn": "2022-01-31T11:47:19Z",
      "side": 1,
      "message": "We can use and remove constructure from line no 41-45\n\n@AllArgsConstructor\npublic class CpsAdminServiceImpl implements CpsAdminService {\n\n    private final CpsAdminPersistenceService cpsAdminPersistenceService;\n    @Lazy\n    private final CpsDataService cpsDataService;",
      "revId": "75750743f6352bf0a12ac25140e416209b5a4b4f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62d601ff_ad1ac62e",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsAdminServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 36,
      "author": {
        "id": 7680
      },
      "writtenOn": "2022-01-31T14:31:23Z",
      "side": 1,
      "message": "I prefer to create an explicit constructor so that we can also see how many classes the class is dependent on. It helps to identify if areÂ doing too much in the class.",
      "parentUuid": "fefec900_1dba9d84",
      "revId": "75750743f6352bf0a12ac25140e416209b5a4b4f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b951b118_72783234",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsAdminServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 36,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-01-31T14:44:58Z",
      "side": 1,
      "message": "I don\u0027t mind either approach but consistency inside our repos would be good. Maybe we can have a quick vote/decision in our next stand-up. Can you please remind me in the next stand-up assuming you are both present?",
      "parentUuid": "62d601ff_ad1ac62e",
      "revId": "75750743f6352bf0a12ac25140e416209b5a4b4f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e511c245_ffad6728",
        "filename": "cps-service/src/main/java/org/onap/cps/api/impl/CpsAdminServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 36,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-02-01T14:40:36Z",
      "side": 1,
      "message": "as per team meeting there is a slight majority in favor of the @AllArgsConstructor annotation.\n(no need to change existing classes but only change service classes like here we wil use the annotation going forward)",
      "parentUuid": "b951b118_72783234",
      "revId": "75750743f6352bf0a12ac25140e416209b5a4b4f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ef17ff83_c2aac1c0",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsAdminServiceImplSpec.groovy",
        "patchSetId": 9
      },
      "lineNbr": 4,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-01-31T09:57:44Z",
      "side": 1,
      "message": "hmm I knew this would come up eventually. Assuming Bell really didn\u0027t touch this file in 2021 :-)\nMaybe this should be 2020,2022  but I dont really care. I think 2020-2022 is good enough in either case and wil make our live easier going forward!",
      "range": {
        "startLine": 4,
        "startChar": 32,
        "endLine": 4,
        "endChar": 41
      },
      "revId": "75750743f6352bf0a12ac25140e416209b5a4b4f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d762ca43_76961586",
        "filename": "cps-service/src/test/groovy/org/onap/cps/api/impl/CpsAdminServiceImplSpec.groovy",
        "patchSetId": 9
      },
      "lineNbr": 71,
      "author": {
        "id": 7957
      },
      "writtenOn": "2022-01-31T11:47:19Z",
      "side": 1,
      "message": "We should use small \u0027p\u0027 here in \u0027Persistence\u0027 to avoid inconsistencies.",
      "revId": "75750743f6352bf0a12ac25140e416209b5a4b4f",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}