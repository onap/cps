{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5238d86e_24951161",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-09-23T15:37:23Z",
      "side": 1,
      "message": "recheck",
      "revId": "6cb0a1d7b79aa362d11c19cbe57afa464dba8f3a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b81d8b5_10f6d6af",
        "filename": "docker-compose/docker-compose.yml",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 7965
      },
      "writtenOn": "2024-09-23T11:10:27Z",
      "side": 1,
      "message": "coming as a requirement to us ?? or we did some testing around it.",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 159
      },
      "revId": "6cb0a1d7b79aa362d11c19cbe57afa464dba8f3a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "628992a8_ce7b0298",
        "filename": "docker-compose/docker-compose.yml",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-09-23T15:55:02Z",
      "side": 1,
      "message": "Yes, task is link to epic NCMP to support 50K CM-Handles. Thus, we have to fine tune the JVM parameters. Otherwise, Java reserves 25% of total physical memory for the heap, and the remaining proportion becomes unused. These new parameters have been tested and the result shared on the ticket number CPS-2180.",
      "parentUuid": "8b81d8b5_10f6d6af",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 159
      },
      "revId": "6cb0a1d7b79aa362d11c19cbe57afa464dba8f3a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c22c4bf4_69a5c912",
        "filename": "docker-compose/docker-compose.yml",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-09-24T08:27:38Z",
      "side": 1,
      "message": "-XX:+UseG1GC\n\nImprovement Consideration: This is a good default, especially with large heap sizes. If latency is critical, we can fine-tune G1GC with more advanced options (e.g., -XX:MaxGCPauseMillis\u003d\u003ctime\u003e).\n\nSuggested Value: No changes unless you have specific GC performance issues. we could add -XX:MaxGCPauseMillis\u003d200 (or whatever pause goal you desire) to optimize GC for pause times.",
      "parentUuid": "628992a8_ce7b0298",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 159
      },
      "revId": "6cb0a1d7b79aa362d11c19cbe57afa464dba8f3a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "670ed54c_209b1f2d",
        "filename": "docker-compose/docker-compose.yml",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-09-24T08:57:14Z",
      "side": 1,
      "message": "I haven\u0027t seen any GC related issues during my local tests and observations.\n\nAgree, lets don\u0027t set MaxGCPauseMillis explicitely until we have observe GC performance issue. \n\nThanks for suggesting...",
      "parentUuid": "c22c4bf4_69a5c912",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 159
      },
      "revId": "6cb0a1d7b79aa362d11c19cbe57afa464dba8f3a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b5a980ea_bdba3585",
        "filename": "docker-compose/docker-compose.yml",
        "patchSetId": 2
      },
      "lineNbr": 63,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-09-24T11:28:12Z",
      "side": 1,
      "message": "I\u0027d prefer is this is not merged as is, further discussion/analysis of test results needs to be done first.\n\nAlso, the scope of the task is only to determine the maximum heap value at 2GB total memory without system becoming unstable, i.e. tuning these two params only:\n\n    -XX:InitialRAMPercentage\u003d75.0 -XX:MaxRAMPercentage\u003d75.0\n\nTuning other JVM parameters is out of scope, and would need separate analysis.",
      "parentUuid": "670ed54c_209b1f2d",
      "range": {
        "startLine": 63,
        "startChar": 25,
        "endLine": 63,
        "endChar": 159
      },
      "revId": "6cb0a1d7b79aa362d11c19cbe57afa464dba8f3a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}