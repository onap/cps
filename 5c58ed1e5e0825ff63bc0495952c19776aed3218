{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9c2df5da_59d34b76",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 7931
      },
      "writtenOn": "2025-04-08T15:36:43Z",
      "side": 1,
      "message": "recheck",
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a291c65_4fc2eb8b",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/cache/AlternateIdCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 7965
      },
      "writtenOn": "2025-04-09T11:44:02Z",
      "side": 1,
      "message": "fix the javadoc.",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 38,
        "endChar": 7
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "68e9998a_c38ed3e9",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/cache/AlternateIdCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 7931
      },
      "writtenOn": "2025-04-10T12:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7a291c65_4fc2eb8b",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 38,
        "endChar": 7
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a66c871_4b38b20c",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/cache/AlternateIdCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 7965
      },
      "writtenOn": "2025-04-09T11:44:02Z",
      "side": 1,
      "message": "also we need to make an update to the RTD file where we are listing all our caches.",
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4ccf7096_83c1c254",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/cache/AlternateIdCacheConfig.java",
        "patchSetId": 1
      },
      "lineNbr": 41,
      "author": {
        "id": 7931
      },
      "writtenOn": "2025-04-10T12:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a66c871_4b38b20c",
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0873fbf_74d88486",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/InventoryPersistenceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-04-09T12:16:41Z",
      "side": 1,
      "message": "NB: remove \u0027all\u0027 aprt, it is a bi redundant and then you would expect a plural but it is a map so the name CmHandleIdPerAlternateId sufices",
      "range": {
        "startLine": 205,
        "startChar": 31,
        "endLine": 205,
        "endChar": 61
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5485e0e6_4beb3077",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/inventory/InventoryPersistenceImpl.java",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 7931
      },
      "writtenOn": "2025-04-10T12:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f0873fbf_74d88486",
      "range": {
        "startLine": 205,
        "startChar": 31,
        "endLine": 205,
        "endChar": 61
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4953af0b_1945e7cf",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/utils/AlternateIdMatcher.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 7965
      },
      "writtenOn": "2025-04-09T11:44:02Z",
      "side": 1,
      "message": "this is change of behaviour.. right ?\npreviously we used to throw cmhandle not found exception when either alternate-id or cmhandleid was not found. now if alternate id is not present then cmhandle id is returned. need to check if this is alright ???",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 73,
        "endChar": 91
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a46e283_146e3460",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/impl/utils/AlternateIdMatcher.java",
        "patchSetId": 1
      },
      "lineNbr": 73,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-04-09T12:16:41Z",
      "side": 1,
      "message": "I examine the code on master I think Priyank is right, the old code could throw an \nCmHandleNotFoundException if the reference was not found at all..\nI assume we stil need that behavior!",
      "parentUuid": "4953af0b_1945e7cf",
      "range": {
        "startLine": 72,
        "startChar": 4,
        "endLine": 73,
        "endChar": 91
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "75dd0cbc_77872beb",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/init/AlternateIdCacheDataLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 7965
      },
      "writtenOn": "2025-04-09T11:44:02Z",
      "side": 1,
      "message": "NB: can have potential race condition but i guess thats ok. worst case we query database twice but the map should have unique entries only.\ncan see in the future if it causes any issues.",
      "range": {
        "startLine": 50,
        "startChar": 8,
        "endLine": 55,
        "endChar": 9
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46090a9e_4ef008f3",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/init/AlternateIdCacheDataLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-04-09T12:16:41Z",
      "side": 1,
      "message": "NB: I think this logging is not necessary",
      "range": {
        "startLine": 53,
        "startChar": 10,
        "endLine": 55,
        "endChar": 9
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6485d50f_f2634a97",
        "filename": "cps-ncmp-service/src/main/java/org/onap/cps/ncmp/init/AlternateIdCacheDataLoader.java",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-04-09T12:16:41Z",
      "side": 1,
      "message": "hopefully the startup delay Sourabh is implement will prevent his but as you mention it is just inefficient but wont cases actual problems if 2 instances attempt this at the same time..",
      "parentUuid": "75dd0cbc_77872beb",
      "range": {
        "startLine": 50,
        "startChar": 8,
        "endLine": 55,
        "endChar": 9
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57b1ad49_b5563d14",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/impl/inventory/AlternateIdCheckerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-04-09T12:16:41Z",
      "side": 1,
      "message": "this is very hard to read, I prefer s separate method (closure) with a good name, probably without using streams for better readability",
      "range": {
        "startLine": 43,
        "startChar": 17,
        "endLine": 43,
        "endChar": 154
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e619c8f0_2ca8366c",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/impl/inventory/AlternateIdCheckerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 7931
      },
      "writtenOn": "2025-04-10T12:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57b1ad49_b5563d14",
      "range": {
        "startLine": 43,
        "startChar": 17,
        "endLine": 43,
        "endChar": 154
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbf2a374_7d42eaea",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/impl/inventory/AlternateIdCheckerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-04-09T12:16:41Z",
      "side": 1,
      "message": "as above, possibly the same closure can be resused?",
      "range": {
        "startLine": 62,
        "startChar": 12,
        "endLine": 63,
        "endChar": 147
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7baa6fc0_1dbdc90e",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/impl/inventory/AlternateIdCheckerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 7931
      },
      "writtenOn": "2025-04-10T12:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cbf2a374_7d42eaea",
      "range": {
        "startLine": 62,
        "startChar": 12,
        "endLine": 63,
        "endChar": 147
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a438f797_bba47bf6",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/impl/inventory/AlternateIdCheckerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-04-09T12:16:41Z",
      "side": 1,
      "message": "this makes me wonder about above comments; can we not simply define the return map in the where table, rather then using a closure to construct something. This could even be more readable",
      "range": {
        "startLine": 81,
        "startChar": 54,
        "endLine": 81,
        "endChar": 57
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fe9b1856_3ad5bdd0",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/impl/inventory/AlternateIdCheckerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 81,
      "author": {
        "id": 7931
      },
      "writtenOn": "2025-04-10T12:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a438f797_bba47bf6",
      "range": {
        "startLine": 81,
        "startChar": 54,
        "endLine": 81,
        "endChar": 57
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85bd75b1_f2591503",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/impl/utils/AlternateIdMatcherSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-04-09T12:16:41Z",
      "side": 1,
      "message": "update the where table: remove the boolean and instead define the return directly",
      "range": {
        "startLine": 69,
        "startChar": 97,
        "endLine": 69,
        "endChar": 117
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "75395c40_354aaaaf",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/impl/utils/AlternateIdMatcherSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 7931
      },
      "writtenOn": "2025-04-10T12:24:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "85bd75b1_f2591503",
      "range": {
        "startLine": 69,
        "startChar": 97,
        "endLine": 69,
        "endChar": 117
      },
      "revId": "5c58ed1e5e0825ff63bc0495952c19776aed3218",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}