{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a150e506_8e8530f5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-02-21T11:43:45Z",
      "side": 1,
      "message": "recheck",
      "revId": "18316c037509c4fddf382d8512c6af620019c7b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7c9103ac_b52529e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-02-21T12:15:53Z",
      "side": 1,
      "message": "recheck",
      "revId": "18316c037509c4fddf382d8512c6af620019c7b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "171d0428_0f1d2f17",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-02-21T12:27:19Z",
      "side": 1,
      "message": "NB suggestion below",
      "revId": "18316c037509c4fddf382d8512c6af620019c7b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8534206b_43236790",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/api/impl/inventory/sync/ModuleOperationsUtilsSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 6639
      },
      "writtenOn": "2024-02-21T12:27:19Z",
      "side": 1,
      "message": "Can we change the production code so the message becomes somethign like \n\"Upgrade to ModuleSetTag: \u003cNOT SPECIFIED\u003e\"\n\nother (unless this break the regex matching)\n\"Upgrade withouth use of ModuleSetTag\"",
      "range": {
        "startLine": 128,
        "startChar": 59,
        "endLine": 128,
        "endChar": 61
      },
      "revId": "18316c037509c4fddf382d8512c6af620019c7b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cd305cd_282cd659",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/api/impl/inventory/sync/ModuleOperationsUtilsSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 128,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-02-21T12:46:41Z",
      "side": 1,
      "message": "NO! This message is parsed to retrieve the ModuleSetTag for the upgrade. Setting to \u0027not-specified\u0027 led to failures, which this fixes.\n\nI am planning a different fix that does not rely on this message at all - my plan is to set the CM-handle\u0027s moduleSetTag to the upgraded one at the same time that the handle goes to LOCKED state for MODULE_UPGRADE. Then we are free to put whatever we want in this message.",
      "parentUuid": "8534206b_43236790",
      "range": {
        "startLine": 128,
        "startChar": 59,
        "endLine": 128,
        "endChar": 61
      },
      "revId": "18316c037509c4fddf382d8512c6af620019c7b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18316c037509c4fddf382d8512c6af620019c7b8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and one other CI or committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d2 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=2 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=2"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "18316c037509c4fddf382d8512c6af620019c7b8",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}