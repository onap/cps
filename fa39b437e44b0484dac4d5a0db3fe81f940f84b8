{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "72b5b80b_64c9280c",
        "filename": "cps-service/src/main/java/org/onap/cps/impl/CpsDataServiceImpl.java",
        "patchSetId": 4
      },
      "lineNbr": 402,
      "author": {
        "id": 6742
      },
      "writtenOn": "2025-03-12T18:01:55Z",
      "side": 1,
      "message": "Nb. This method has nothing to do with json strings. It appears to simply take a list of maps, and flatten it to a single map. I\u0027d propose naming it \u0027flattenDataMaps\u0027",
      "range": {
        "startLine": 402,
        "startChar": 32,
        "endLine": 402,
        "endChar": 55
      },
      "revId": "fa39b437e44b0484dac4d5a0db3fe81f940f84b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42054921_e6f811f0",
        "filename": "cps-service/src/main/java/org/onap/cps/utils/DataMapper.java",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 6742
      },
      "writtenOn": "2025-03-12T18:01:55Z",
      "side": 1,
      "message": "NB performance issue: This anchor lookup will hit the database each time in the loop. But I think we only need the Anchor so that we have the SchemaSet name for PrefixResolver.\n\nThe DataNode object already has that information, including SchemaSet, Dataspace, Anchor, etc. This could be used to simplify this entire class: we could pass the DataNode directly to the PrefixResolver. In turn, all these methods would reduce to a single one, without any performance overhead:\n\n    List\u003cMap\u003cString, Object\u003e\u003e toDataMaps(Collection\u003cDataNode\u003e dataNodes);",
      "range": {
        "startLine": 98,
        "startChar": 12,
        "endLine": 98,
        "endChar": 88
      },
      "revId": "fa39b437e44b0484dac4d5a0db3fe81f940f84b8",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}