{
  "comments": [
    {
      "key": {
        "uuid": "77cd1881_299ccb9f",
        "filename": "cps-ncmp-rest/docs/openapi/components.yaml",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-06-02T13:44:16Z",
      "side": 1,
      "message": "Q: I suppose output is the significant keyword, correct?",
      "range": {
        "startLine": 272,
        "startChar": 8,
        "endLine": 272,
        "endChar": 14
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4f1b5c2f_865f375e",
        "filename": "cps-ncmp-rest/docs/openapi/components.yaml",
        "patchSetId": 1
      },
      "lineNbr": 272,
      "author": {
        "id": 7830
      },
      "writtenOn": "2022-06-02T14:16:06Z",
      "side": 1,
      "message": "Yes but I continued with RestOutput established convention",
      "parentUuid": "77cd1881_299ccb9f",
      "range": {
        "startLine": 272,
        "startChar": 8,
        "endLine": 272,
        "endChar": 14
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7e16226_7e9caf7c",
        "filename": "cps-ncmp-rest/src/test/groovy/org/onap/cps/ncmp/rest/controller/NetworkCmProxyControllerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 254,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-06-03T08:31:49Z",
      "side": 1,
      "message": "for clarity insert \u0027(complete)\u0027",
      "range": {
        "startLine": 254,
        "startChar": 12,
        "endLine": 254,
        "endChar": 15
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4ffd5d43_66c50669",
        "filename": "cps-ncmp-rest/src/test/groovy/org/onap/cps/ncmp/rest/controller/NetworkCmProxyControllerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-06-03T08:31:49Z",
      "side": 1,
      "message": "use groovy map and iterate over key value pairs (in a 3rd method) to check if there are in response",
      "range": {
        "startLine": 274,
        "startChar": 0,
        "endLine": 280,
        "endChar": 77
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c27b1e6c_903461ad",
        "filename": "cps-ncmp-rest/src/test/groovy/org/onap/cps/ncmp/rest/controller/NetworkCmProxyControllerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-06-02T13:44:16Z",
      "side": 1,
      "message": "Opinions and feedback form all requested:\n\nI recently discussed this with Dylan And Andras,\n\nShould we have separate mapper test (which Dyan did) or elva it tested here as it included conversion to Rest response (which I am not sure if it cover our code)\n\nI think both approached are OK considering\n1) if there are many complicated conversion a separate tets of the mapper might be preferable\n2) Id there is no separate mapper tets we have to be careful to test conversion only once and not \u0027pollute\u0027 many test with same/similar data. Those other tests should need only one (significant) attribute to verify the output",
      "range": {
        "startLine": 273,
        "startChar": 0,
        "endLine": 283,
        "endChar": 5
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87c77201_252278a4",
        "filename": "cps-ncmp-rest/src/test/groovy/org/onap/cps/ncmp/rest/controller/NetworkCmProxyControllerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 283,
      "author": {
        "id": 7830
      },
      "writtenOn": "2022-06-02T14:16:06Z",
      "side": 1,
      "message": "The mapping occurs in NetworkCmProxyDataServiceImpl.getNcmpServiceCmHandle() directly and this is not tested elsewhere. I can make a mapper class for it and test that. I think at a minimum we should test that \u0027publicCmHandleProperties\u0027 and \u0027state\u0027 exist in response.",
      "parentUuid": "c27b1e6c_903461ad",
      "range": {
        "startLine": 273,
        "startChar": 0,
        "endLine": 283,
        "endChar": 5
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "22caa0eb_b39eba0e",
        "filename": "cps-ncmp-rest/src/test/groovy/org/onap/cps/ncmp/rest/controller/NetworkCmProxyControllerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 297,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-06-03T08:31:49Z",
      "side": 1,
      "message": "extract out assertPublicProprtiesDetails() and re-use in method that get complete state",
      "range": {
        "startLine": 297,
        "startChar": 12,
        "endLine": 297,
        "endChar": 116
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f4233ef_805ce40a",
        "filename": "cps-ncmp-rest/src/test/groovy/org/onap/cps/ncmp/rest/controller/NetworkCmProxyControllerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-06-02T13:44:16Z",
      "side": 1,
      "message": "minimise duplication with previous test (see discussion point) maybe for this conversion ampper tets would be more appropriate oor do we still need to test conversion to REST output?!",
      "range": {
        "startLine": 316,
        "startChar": 0,
        "endLine": 325,
        "endChar": 63
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac356baa_7084e9ee",
        "filename": "cps-ncmp-rest/src/test/groovy/org/onap/cps/ncmp/rest/controller/NetworkCmProxyControllerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 7830
      },
      "writtenOn": "2022-06-02T14:16:06Z",
      "side": 1,
      "message": "Same as above, can make mapper method in new YangModelCmHandle to NcmpServiceCmHandle mapper class and test that. Currently it is mapped directly",
      "parentUuid": "7f4233ef_805ce40a",
      "range": {
        "startLine": 316,
        "startChar": 0,
        "endLine": 325,
        "endChar": 63
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac7b5abe_45f7aafb",
        "filename": "cps-ncmp-rest/src/test/groovy/org/onap/cps/ncmp/rest/controller/NetworkCmProxyControllerSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-06-03T08:31:49Z",
      "side": 1,
      "message": "extract out assertStateDetails() and re-use in method that get complete state",
      "range": {
        "startLine": 316,
        "startChar": 0,
        "endLine": 325,
        "endChar": 63
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3791ef6a_981653de",
        "filename": "cps-ncmp-service/src/test/groovy/org/onap/cps/ncmp/api/impl/NetworkCmProxyDataServiceImplSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 189,
      "author": {
        "id": 6639
      },
      "writtenOn": "2022-06-02T13:44:16Z",
      "side": 1,
      "message": "maybe insert a few \u0027and:@ to label different parts more detailed",
      "range": {
        "startLine": 186,
        "startChar": 1,
        "endLine": 189,
        "endChar": 51
      },
      "revId": "259340e4fcc846d1faaa748ca54520144f1873fc",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    }
  ]
}