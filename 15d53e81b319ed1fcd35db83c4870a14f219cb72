{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "28bd6640_63f67013",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 8063
      },
      "writtenOn": "2024-05-21T14:58:12Z",
      "side": 1,
      "message": "Good to me and worked well on my local machine",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d5a6fb17_ad28bdeb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 7931
      },
      "writtenOn": "2024-05-22T09:43:25Z",
      "side": 1,
      "message": "recheck",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14fa4ff5_a922b1cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 7931
      },
      "writtenOn": "2024-05-22T10:36:36Z",
      "side": 1,
      "message": "recheck",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "047c8dde_9fda7839",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-05-22T11:00:54Z",
      "side": 1,
      "message": "recheck",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db65cd0b_ed351f1c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 6742
      },
      "writtenOn": "2024-05-22T11:27:09Z",
      "side": 1,
      "message": "recheck",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1db940e9_e755b5c7",
        "filename": "k6-tests/ncmp/1-create-cmhandles.js",
        "patchSetId": 8
      },
      "lineNbr": 56,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "NB: We should log for better visibility :\n\nlogResponse(response, batchNumber);\n\nfunction logResponse(response, batch) {\n    if (!check(response, { \u0027status is 200\u0027: (r) \u003d\u003e r.status \u003d\u003d\u003d 200 })) {\n        console.error(`Batch ${batch}: Failed with status ${response.status}`);\n    }\n}",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "851fac91_993c5ee5",
        "filename": "k6-tests/ncmp/10-mixed-load-test.js",
        "patchSetId": 8
      },
      "lineNbr": 63,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "NB: logAndCheck(response, \u0027passthrough_read\u0027);\n\nfunction logAndCheck(response, scenarioName) {\n    const success \u003d check(response, {\n        \u0027status is 200\u0027: (r) \u003d\u003e r.status \u003d\u003d\u003d 200,\n    });\n\n    if (!success) {\n        console.error(`[${scenarioName}] Request failed. Status: ${response.status}, Response: ${response.body}`);\n    }\n}",
      "range": {
        "startLine": 61,
        "startChar": 3,
        "endLine": 63,
        "endChar": 6
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b17d3a77_a91ac515",
        "filename": "k6-tests/ncmp/10-mixed-load-test.js",
        "patchSetId": 8
      },
      "lineNbr": 75,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "NB: const response \u003d searchRequest(searchType, JSON.stringify(search_filter));\n\n    logAndCheck(response, scenarioName);",
      "range": {
        "startLine": 75,
        "startChar": 4,
        "endLine": 75,
        "endChar": 64
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a07c5eee_24f51c7d",
        "filename": "k6-tests/ncmp/10-mixed-load-test.js",
        "patchSetId": 8
      },
      "lineNbr": 87,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "NB: const response \u003d searchRequest(searchType, JSON.stringify(search_filter));\n\n    logAndCheck(response, scenarioName);",
      "range": {
        "startLine": 87,
        "startChar": 4,
        "endLine": 87,
        "endChar": 61
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3fadb9f8_6b1ad478",
        "filename": "k6-tests/ncmp/11-delete-cmhandles.js",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "Math.ceil(TOTAL_CM_HANDLES / 100),",
      "range": {
        "startLine": 28,
        "startChar": 14,
        "endLine": 28,
        "endChar": 37
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16293b6c_28377048",
        "filename": "k6-tests/ncmp/11-delete-cmhandles.js",
        "patchSetId": 8
      },
      "lineNbr": 46,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "NB:\nlogAndCheck(response);\nfunction logAndCheck(response) {\n    const success \u003d check(response, {\n        \u0027status is 200\u0027: (r) \u003d\u003e r.status \u003d\u003d\u003d 200,\n    });\n\n    if (!success) {\n        console.error(`Request failed. Status: ${response.status}, Response: ${response.body}`);\n    }\n}",
      "range": {
        "startLine": 44,
        "startChar": 4,
        "endLine": 46,
        "endChar": 7
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8343bf34_d0b446f0",
        "filename": "k6-tests/ncmp/2-wait-for-cmhandles-to-be-ready.js",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "Math.ceil(timeoutInSeconds / pollingIntervalInSeconds);",
      "range": {
        "startLine": 41,
        "startChar": 23,
        "endLine": 41,
        "endChar": 67
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ccad17d1_6e3b7236",
        "filename": "k6-tests/ncmp/2-wait-for-cmhandles-to-be-ready.js",
        "patchSetId": 8
      },
      "lineNbr": 48,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "NB: console.error(`Attempt ${currentTry + 1} - Error fetching CM handles: ${error.message}`);",
      "range": {
        "startLine": 48,
        "startChar": 12,
        "endLine": 48,
        "endChar": 39
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25fe4657_8da427ab",
        "filename": "k6-tests/ncmp/2-wait-for-cmhandles-to-be-ready.js",
        "patchSetId": 8
      },
      "lineNbr": 50,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "NB: console.log(`Attempt ${currentTry + 1} - ${cmHandlesReady}/${totalCmHandles} CM handles are READY`);",
      "range": {
        "startLine": 50,
        "startChar": 8,
        "endLine": 50,
        "endChar": 62
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f76c91ad_8e019f91",
        "filename": "k6-tests/ncmp/2-wait-for-cmhandles-to-be-ready.js",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "NB: console.log(`All ${totalCmHandles} CM handles are READY`);\nreturn;",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92227efe_f24fc119",
        "filename": "k6-tests/ncmp/2-wait-for-cmhandles-to-be-ready.js",
        "patchSetId": 8
      },
      "lineNbr": 55,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "fail(`Timed out after ${timeoutInSeconds} seconds waiting for ${totalCmHandles} CM handles to be READY`);",
      "range": {
        "startLine": 55,
        "startChar": 4,
        "endLine": 55,
        "endChar": 57
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed11c62f_c31d6793",
        "filename": "k6-tests/ncmp/2-wait-for-cmhandles-to-be-ready.js",
        "patchSetId": 8
      },
      "lineNbr": 60,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "`${NCMP_BASE_URL}",
      "range": {
        "startLine": 60,
        "startChar": 24,
        "endLine": 60,
        "endChar": 41
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "623eb31d_bf4bf2ed",
        "filename": "k6-tests/ncmp/2-wait-for-cmhandles-to-be-ready.js",
        "patchSetId": 8
      },
      "lineNbr": 67,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "const cmHandles \u003d jsonData[0][\"dmi-reg:dmi-registry\"][\"cm-handles\"];\n    return cmHandles.filter(cmhandle \u003d\u003e cmhandle[\u0027state\u0027][\u0027cm-handle-state\u0027] \u003d\u003d\u003d \u0027READY\u0027).length;",
      "range": {
        "startLine": 62,
        "startChar": 4,
        "endLine": 67,
        "endChar": 26
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76a59006_d1af030d",
        "filename": "k6-tests/ncmp/3-passthrough-read.js",
        "patchSetId": 8
      },
      "lineNbr": 47,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "NB: \n\n const checkStatus \u003d check(response, {\n        \u0027status is 200\u0027: (r) \u003d\u003e r.status \u003d\u003d\u003d 200,\n    });\n\n    if (!checkStatus) {\n        console.error(`Request to ${url} failed with status ${response.status}. Response: ${response.body}`);\n    }\n\n    // Calculate overhead assuming DMI data delay is 2500ms.\n    const dmiDelay \u003d 2500;\n    const overhead \u003d response.timings.duration - dmiDelay;\n    ncmpOverheadTrend.add(overhead);\n\n    // Log the overhead for each request\n    console.log(`Request to ${cmHandleId} - Overhead: ${overhead} ms`);",
      "range": {
        "startLine": 43,
        "startChar": 3,
        "endLine": 47,
        "endChar": 60
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "675a3734_8d72378c",
        "filename": "k6-tests/ncmp/4-id-search-no-filter.js",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "import http from \u0027k6/http\u0027;\nimport { check } from \u0027k6\u0027;\nimport { Trend, Rate } from \u0027k6/metrics\u0027;",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "460450c1_ecdfa2d7",
        "filename": "k6-tests/ncmp/4-id-search-no-filter.js",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "const searchDurationTrend \u003d new Trend(\u0027search_duration\u0027);\nconst searchErrorRate \u003d new Rate(\u0027search_errors\u0027);\n\nexport default function() {\n    const response \u003d searchRequest(\u0027id-searches\u0027, \u0027{}\u0027);\n\n    const success \u003d check(response, {\n        \u0027status is 200\u0027: (r) \u003d\u003e r.status \u003d\u003d\u003d 200,\n    });\n\n    // Log and track errors if the request fails\n    if (!success) {\n        searchErrorRate.add(1);\n        console.error(`Search request failed with status ${response.status}. Response: ${response.body}`);\n    } else {\n        searchErrorRate.add(0);\n    }\n\n    // Add the response duration to the custom trend metric\n    searchDurationTrend.add(response.timings.duration);\n\n    // Optional: log the duration for each request\n    console.log(`Request duration: ${response.timings.duration} ms`);\n}",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 38
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "61e80a50_58189109",
        "filename": "k6-tests/ncmp/5-search-no-filter.js",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "import http from \u0027k6/http\u0027;\nimport { check } from \u0027k6\u0027;\nimport { Trend, Rate } from \u0027k6/metrics\u0027;",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23dc17c1_a3dc97b3",
        "filename": "k6-tests/ncmp/5-search-no-filter.js",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "const searchDurationTrend \u003d new Trend(\u0027search_duration\u0027);\nconst searchErrorRate \u003d new Rate(\u0027search_errors\u0027);\n\nexport default function() {\n    const response \u003d searchRequest(\u0027searches\u0027, \u0027{}\u0027);\n\n    const success \u003d check(response, {\n        \u0027status is 200\u0027: (r) \u003d\u003e r.status \u003d\u003d\u003d 200,\n    });\n\n    // Log and track errors if the request fails\n    if (!success) {\n        searchErrorRate.add(1);\n        console.error(`Search request failed with status ${response.status}. Response: ${response.body}`);\n    } else {\n        searchErrorRate.add(0);\n    }\n\n    // Add the response duration to the custom trend metric\n    searchDurationTrend.add(response.timings.duration);\n\n    // Optional: log the duration for each request\n    console.log(`Request duration: ${response.timings.duration} ms`);\n}\n\n// searchRequest function implementation\nexport function searchRequest(endpoint, body) {\n    const url \u003d `${NCMP_BASE_URL}/cps/api/v2/${endpoint}`;\n    const params \u003d {\n        headers: {\n            \u0027Content-Type\u0027: \u0027application/json\u0027,\n        },\n    };\n\n    return http.post(url, body, params);\n}",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 34,
        "endChar": 1
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb33af17_96a329ef",
        "filename": "k6-tests/ncmp/6-id-search-public-property.js",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "import { sleep } from \u0027k6\u0027;",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "556677dc_678f67dd",
        "filename": "k6-tests/ncmp/6-id-search-public-property.js",
        "patchSetId": 8
      },
      "lineNbr": 22,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "import http from \u0027k6/http\u0027;",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0bf11642_35a07845",
        "filename": "k6-tests/ncmp/6-id-search-public-property.js",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "const body \u003d JSON.stringify(search_filter);\n    const response \u003d searchRequest(\u0027id-searches\u0027, body);\n\n    // Check response status\n    if (response.status !\u003d\u003d 200) {\n        console.error(`Search request failed with status ${response.status}. Response: ${response.body}`);\n        return;\n    }\n\n    // Optional: Log successful request\n    console.log(\u0027Search request successful\u0027);\n\n    // Optional: Log response body\n    console.log(`Response body: ${response.body}`);",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 64
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d6fed4a_1031fe8c",
        "filename": "k6-tests/ncmp/7-search-public-property.js",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "import { check } from \u0027k6\u0027;",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71ac9468_0c282a4f",
        "filename": "k6-tests/ncmp/7-search-public-property.js",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "const body \u003d JSON.stringify(search_filter);\n    const response \u003d searchRequest(\u0027searches\u0027, body);\n\n    // Check response status\n    const checkRes \u003d check(response, {\n        \u0027status is 200\u0027: (r) \u003d\u003e r.status \u003d\u003d\u003d 200,\n    });\n\n    // Log errors if check failed\n    if (!checkRes) {\n        console.error(`Search request failed for filters: ${body}. Response: ${response.status} ${response.body}`);\n    }",
      "range": {
        "startLine": 41,
        "startChar": 3,
        "endLine": 41,
        "endChar": 61
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b4cf001_dfb9bb1d",
        "filename": "k6-tests/ncmp/8-id-search-module.js",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "import { check } from \u0027k6\u0027;",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5c85002_5cd61e39",
        "filename": "k6-tests/ncmp/8-id-search-module.js",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "const body \u003d JSON.stringify(search_filter);\n    const response \u003d searchRequest(\u0027id-searches\u0027, body);\n\n    // Check response status\n    const checkRes \u003d check(response, {\n        \u0027status is 200\u0027: (r) \u003d\u003e r.status \u003d\u003d\u003d 200,\n    });\n\n    // Log errors if check failed\n    if (!checkRes) {\n        console.error(`Search request failed for filters: ${body}. Response: ${response.status} ${response.body}`);\n    }",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 64
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7762c4b1_9f30c293",
        "filename": "k6-tests/ncmp/9-search-module.js",
        "patchSetId": 8
      },
      "lineNbr": 20,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "import { check } from \u0027k6\u0027;",
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c4bd6d26_e2a12eb4",
        "filename": "k6-tests/ncmp/9-search-module.js",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "NB: \n\nconst body \u003d JSON.stringify(search_filter);\n    const response \u003d searchRequest(\u0027searches\u0027, body);\n\n    // Check response status\n    const checkRes \u003d check(response, {\n        \u0027status is 200\u0027: (r) \u003d\u003e r.status \u003d\u003d\u003d 200,\n    });\n\n    // Log errors if check failed\n    if (!checkRes) {\n        console.error(`Search request failed for filters: ${body}. Response: ${response.status} ${response.body}`);\n    }",
      "range": {
        "startLine": 41,
        "startChar": 4,
        "endLine": 41,
        "endChar": 61
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0deef88c_aaa3e06a",
        "filename": "k6-tests/ncmp/run-all-tests.sh",
        "patchSetId": 8
      },
      "lineNbr": 45,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "# Function to run k6 test scripts\nrun_tests() {\n    local number_of_failures\u003d0\n    for test_script in \"${ALL_TEST_SCRIPTS[@]}\"; do\n        echo \"Running test: $test_script\"\n        k6 run --quiet \"$test_script\"\n        local exit_code\u003d$?\n        if [ $exit_code -ne 0 ]; then\n            echo \"Test $test_script failed with exit code $exit_code\"\n            ((number_of_failures++))\n        else\n            echo \"Test $test_script completed successfully\"\n        fi\n        echo\n    done\n    return $number_of_failures\n}\n\n# Run tests\npushd \"$(dirname \"$0\")\" || exit 1\nrun_tests\npopd || exit 1\n\n# Print total number of failures\necho \"NCMP TEST FAILURES: $?\"",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 45,
        "endChar": 0
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d693c11f_a0077ff6",
        "filename": "k6-tests/ncmp/search-base.js",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 7957
      },
      "writtenOn": "2024-05-22T12:15:30Z",
      "side": 1,
      "message": "// Check response status\n    const statusCheck \u003d check(response, {\n        \u0027status is 200\u0027: (r) \u003d\u003e r.status \u003d\u003d\u003d 200,\n    });\n\n    // Check returned list of CM-handles\n    const body \u003d JSON.parse(response.body);\n    const cmHandlesCheck \u003d check(body, {\n        \u0027returned list has expected CM-handles\u0027: (arr) \u003d\u003e arr.length \u003d\u003d\u003d TOTAL_CM_HANDLES,\n    });\n\n    // Log errors\n    if (!statusCheck) {\n        console.error(`Search request failed with status ${response.status}`);\n    }\n    if (!cmHandlesCheck) {\n        console.error(`Returned list does not have expected CM-handles`);\n    }\n\n    // Log response body for debugging\n    console.log(`Search response body: ${response.body}`);",
      "range": {
        "startLine": 32,
        "startChar": 4,
        "endLine": 34,
        "endChar": 7
      },
      "revId": "15d53e81b319ed1fcd35db83c4870a14f219cb72",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ]
}