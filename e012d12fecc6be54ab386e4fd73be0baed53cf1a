{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "55fa8125_680ffcef",
        "filename": "cps-service/src/test/groovy/org/onap/cps/events/CpsDataUpdateEventsServiceSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 7957
      },
      "writtenOn": "2025-03-06T16:51:44Z",
      "side": 1,
      "message": "NB: I would prefer groovy way :\n\ndef anchor \u003d new Anchor(name: \u0027anchor02\u0027, dataspace: \u0027some dataspace\u0027, schema: \u0027some schema\u0027)",
      "range": {
        "startLine": 105,
        "startChar": 12,
        "endLine": 105,
        "endChar": 81
      },
      "revId": "e012d12fecc6be54ab386e4fd73be0baed53cf1a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78cd1c7e_a2776c9c",
        "filename": "cps-service/src/test/groovy/org/onap/cps/events/CpsDataUpdateEventsServiceSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-03-06T17:10:37Z",
      "side": 1,
      "message": "in this case normal constructor is shorted and therefore preferred\n(i did consider same :-) )",
      "parentUuid": "55fa8125_680ffcef",
      "range": {
        "startLine": 105,
        "startChar": 12,
        "endLine": 105,
        "endChar": 81
      },
      "revId": "e012d12fecc6be54ab386e4fd73be0baed53cf1a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42514ace_73e811c5",
        "filename": "cps-service/src/test/groovy/org/onap/cps/events/CpsDataUpdateEventsServiceSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 105,
      "author": {
        "id": 7957
      },
      "writtenOn": "2025-03-06T17:21:36Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "78cd1c7e_a2776c9c",
      "range": {
        "startLine": 105,
        "startChar": 12,
        "endLine": 105,
        "endChar": 81
      },
      "revId": "e012d12fecc6be54ab386e4fd73be0baed53cf1a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84510b33_23898bc9",
        "filename": "cps-service/src/test/groovy/org/onap/cps/events/CpsDataUpdateEventsServiceSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 7957
      },
      "writtenOn": "2025-03-06T16:51:44Z",
      "side": 1,
      "message": "NB Shouldn\u0027t we try \"with\" for setting properties here like below: \n\n\nobjectUnderTest.with {\n        notificationsEnabled \u003d notificationsEnabled\n        cpsChangeEventNotificationsEnabled \u003d cpsChangeEventNotificationsEnabled\n    }",
      "range": {
        "startLine": 107,
        "startChar": 12,
        "endLine": 109,
        "endChar": 99
      },
      "revId": "e012d12fecc6be54ab386e4fd73be0baed53cf1a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a76cdcad_bc505fec",
        "filename": "cps-service/src/test/groovy/org/onap/cps/events/CpsDataUpdateEventsServiceSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-03-06T17:10:37Z",
      "side": 1,
      "message": "i like the fact there are two block ie separate descriptions",
      "parentUuid": "84510b33_23898bc9",
      "range": {
        "startLine": 107,
        "startChar": 12,
        "endLine": 109,
        "endChar": 99
      },
      "revId": "e012d12fecc6be54ab386e4fd73be0baed53cf1a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0203888_2bb86cf4",
        "filename": "cps-service/src/test/groovy/org/onap/cps/events/CpsDataUpdateEventsServiceSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 7957
      },
      "writtenOn": "2025-03-06T16:51:44Z",
      "side": 1,
      "message": "anchor.name",
      "range": {
        "startLine": 111,
        "startChar": 64,
        "endLine": 111,
        "endChar": 74
      },
      "revId": "e012d12fecc6be54ab386e4fd73be0baed53cf1a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c5af793c_e9b62d50",
        "filename": "cps-service/src/test/groovy/org/onap/cps/events/CpsDataUpdateEventsServiceSpec.groovy",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 6639
      },
      "writtenOn": "2025-03-06T17:10:37Z",
      "side": 1,
      "message": "thought about it for a few seconds, but its important to see this test is using a different anchor(name) then all the other tests! so for readability (and it is shorter) I prefer as is..",
      "parentUuid": "b0203888_2bb86cf4",
      "range": {
        "startLine": 111,
        "startChar": 64,
        "endLine": 111,
        "endChar": 74
      },
      "revId": "e012d12fecc6be54ab386e4fd73be0baed53cf1a",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "A maximum \u0027Code-Review\u0027 vote from a non-uploader is required for the \u0027Code-Review\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e012d12fecc6be54ab386e4fd73be0baed53cf1a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "A maximum \u0027Verified\u0027 vote from \u0027ONAP Required GHA\u0027 and two other CI systems or another CI system and committer that is a non-uploader is required for the \u0027Verified\u0027 label. A minimum vote is blocking."
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX,user\u003donap.required.gha AND label:Verified\u003dMAX,count\u003e\u003d3 AND label:Verified\u003dMAX,user\u003dnon_uploader AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX,user=onap.required.gha AND label:Verified=MAX,count>=3 AND label:Verified=MAX,user=non_uploader AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX,user=onap.required.gha","label:Verified=MAX,user=non_uploader","label:Verified=MAX,count>=3"],"failingAtoms":["label:Verified=MIN"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "e012d12fecc6be54ab386e4fd73be0baed53cf1a",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}