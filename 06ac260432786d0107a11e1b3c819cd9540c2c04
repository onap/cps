{
  "comments": [
    {
      "key": {
        "uuid": "ae7c7993_307c3dcf",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-01-14T13:45:26Z",
      "side": 1,
      "message": "any specific reason for use LinkedList?",
      "revId": "06ac260432786d0107a11e1b3c819cd9540c2c04",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96708762_185b5009",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 6841
      },
      "writtenOn": "2021-01-14T16:05:55Z",
      "side": 1,
      "message": "Because linked list gives us better performance when inserting data",
      "parentUuid": "ae7c7993_307c3dcf",
      "revId": "06ac260432786d0107a11e1b3c819cd9540c2c04",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40cf590e_9a179a10",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 56,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-01-14T17:03:12Z",
      "side": 1,
      "message": "it as bigger memory consumption, so for big volumes of data it will have higher impact. Up to the team if they have some comments on this",
      "parentUuid": "96708762_185b5009",
      "revId": "06ac260432786d0107a11e1b3c819cd9540c2c04",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b5779d88_8ca4b869",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 71,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-01-14T13:45:26Z",
      "side": 1,
      "message": "why this returns Fragment, return is never used\ncorrect impl, will be to convert all fragments, then collect into list, and then process addChildFragments",
      "revId": "06ac260432786d0107a11e1b3c819cd9540c2c04",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f87865a_bac65214",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 71,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-01-14T14:48:19Z",
      "side": 1,
      "message": "Hi Claudio the return is used, see line 98. I worked a bit with Niamh on this but I do take your point maybe it is OK into do in 2 stages, first recurs to populate dataNode and all children\nand then a separate method to populate the list for the DB...",
      "parentUuid": "b5779d88_8ca4b869",
      "revId": "06ac260432786d0107a11e1b3c819cd9540c2c04",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c250b44_84317af9",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 71,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-01-14T15:21:16Z",
      "side": 1,
      "message": "-Im looking to obtain immutable list and then process. Other type of approach all the times ends on some race condition or issue when passing a list and modifying it.\n- Sorry, I missed the line where it is used. If it can be reworked as per my intentions, great. I will take another look later, maybe I can provide another input",
      "parentUuid": "5f87865a_bac65214",
      "revId": "06ac260432786d0107a11e1b3c819cd9540c2c04",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b66dcd9_a9b61720",
        "filename": "cps-ri/src/main/java/org/onap/cps/spi/impl/CpsDataPersistenceServiceImpl.java",
        "patchSetId": 9
      },
      "lineNbr": 71,
      "author": {
        "id": 6639
      },
      "writtenOn": "2021-01-14T16:13:14Z",
      "side": 1,
      "message": "we tried, see patch #10. The problem is for some reason the Fragment Entity stores its parent and not its children (unlike the dataNode object). the only way to split the code into 2 separate iterations (which I do prefer) is to add a a transient collection in fragment. Not sure if I like that...\n\nwe need to make a choice which approach we prefer this oen in patch #9 recursing and populating in one method (we can come up with better names) or the approach in patch #10 with the additional transient field... \n\nIn any case i do wonder WHY to do store parent instead of children in FragmentEntity, can this be changed, which is better for later use case like adding/removing child fragments?!\nI\u0027ll ask the same question in patch 10 in case we do want to continue with that alternative",
      "parentUuid": "9c250b44_84317af9",
      "revId": "06ac260432786d0107a11e1b3c819cd9540c2c04",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7a835b1_1bed52f3",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/CpsDataPersistenceService.java",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 6679
      },
      "writtenOn": "2021-01-14T13:45:26Z",
      "side": 1,
      "message": "missing nonnull annotations",
      "revId": "06ac260432786d0107a11e1b3c819cd9540c2c04",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69689aa2_b1ee3a77",
        "filename": "cps-service/src/main/java/org/onap/cps/spi/CpsDataPersistenceService.java",
        "patchSetId": 9
      },
      "lineNbr": 39,
      "author": {
        "id": 6841
      },
      "writtenOn": "2021-01-14T16:05:55Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d7a835b1_1bed52f3",
      "revId": "06ac260432786d0107a11e1b3c819cd9540c2c04",
      "serverId": "14b4e41f-c4e3-4fb9-9955-6a9b5656895a",
      "unresolved": false
    }
  ]
}